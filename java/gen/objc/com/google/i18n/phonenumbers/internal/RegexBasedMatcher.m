//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/HambroPerks/hambroperks_org/libphonenumber/java/libphonenumber/src/main/java/com/google/i18n/phonenumbers/internal/RegexBasedMatcher.java
//

#include "J2ObjC_source.h"
#include "com/google/i18n/phonenumbers/Phonemetadata.h"
#include "com/google/i18n/phonenumbers/internal/MatcherApi.h"
#include "com/google/i18n/phonenumbers/internal/RegexBasedMatcher.h"
#include "com/google/i18n/phonenumbers/internal/RegexCache.h"
#include "java/lang/CharSequence.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface ComGoogleI18nPhonenumbersInternalRegexBasedMatcher () {
 @public
  ComGoogleI18nPhonenumbersInternalRegexCache *regexCache_;
}

- (instancetype)init;

+ (jboolean)matchWithJavaLangCharSequence:(id<JavaLangCharSequence>)number
                 withJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern
                              withBoolean:(jboolean)allowPrefixMatch;

@end

J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersInternalRegexBasedMatcher, regexCache_, ComGoogleI18nPhonenumbersInternalRegexCache *)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init(ComGoogleI18nPhonenumbersInternalRegexBasedMatcher *self);

__attribute__((unused)) static ComGoogleI18nPhonenumbersInternalRegexBasedMatcher *new_ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleI18nPhonenumbersInternalRegexBasedMatcher *create_ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init();

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_matchWithJavaLangCharSequence_withJavaUtilRegexPattern_withBoolean_(id<JavaLangCharSequence> number, JavaUtilRegexPattern *pattern, jboolean allowPrefixMatch);

@implementation ComGoogleI18nPhonenumbersInternalRegexBasedMatcher

+ (id<ComGoogleI18nPhonenumbersInternalMatcherApi>)create {
  return ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_create();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)matchNationalNumberWithJavaLangCharSequence:(id<JavaLangCharSequence>)number
withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:(ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *)numberDesc
                                            withBoolean:(jboolean)allowPrefixMatch {
  NSString *nationalNumberPattern = [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(numberDesc)) getNationalNumberPattern];
  if (((jint) [((NSString *) nil_chk(nationalNumberPattern)) length]) == 0) {
    return false;
  }
  return ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_matchWithJavaLangCharSequence_withJavaUtilRegexPattern_withBoolean_(number, [((ComGoogleI18nPhonenumbersInternalRegexCache *) nil_chk(regexCache_)) getPatternForRegexWithNSString:nationalNumberPattern], allowPrefixMatch);
}

+ (jboolean)matchWithJavaLangCharSequence:(id<JavaLangCharSequence>)number
                 withJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern
                              withBoolean:(jboolean)allowPrefixMatch {
  return ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_matchWithJavaLangCharSequence_withJavaUtilRegexPattern_withBoolean_(number, pattern, allowPrefixMatch);
}

- (void)dealloc {
  RELEASE_(regexCache_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleI18nPhonenumbersInternalMatcherApi;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(create);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(matchNationalNumberWithJavaLangCharSequence:withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:withBoolean:);
  methods[3].selector = @selector(matchWithJavaLangCharSequence:withJavaUtilRegexPattern:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "regexCache_", "LComGoogleI18nPhonenumbersInternalRegexCache;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "matchNationalNumber", "LJavaLangCharSequence;LComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc;Z", "match", "LJavaLangCharSequence;LJavaUtilRegexPattern;Z" };
  static const J2ObjcClassInfo _ComGoogleI18nPhonenumbersInternalRegexBasedMatcher = { "RegexBasedMatcher", "com.google.i18n.phonenumbers.internal", ptrTable, methods, fields, 7, 0x11, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleI18nPhonenumbersInternalRegexBasedMatcher;
}

@end

id<ComGoogleI18nPhonenumbersInternalMatcherApi> ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_create() {
  ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_initialize();
  return create_ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init();
}

void ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init(ComGoogleI18nPhonenumbersInternalRegexBasedMatcher *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->regexCache_, new_ComGoogleI18nPhonenumbersInternalRegexCache_initWithInt_(100));
}

ComGoogleI18nPhonenumbersInternalRegexBasedMatcher *new_ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init() {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersInternalRegexBasedMatcher, init)
}

ComGoogleI18nPhonenumbersInternalRegexBasedMatcher *create_ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_init() {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersInternalRegexBasedMatcher, init)
}

jboolean ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_matchWithJavaLangCharSequence_withJavaUtilRegexPattern_withBoolean_(id<JavaLangCharSequence> number, JavaUtilRegexPattern *pattern, jboolean allowPrefixMatch) {
  ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_initialize();
  JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(pattern)) matcherWithJavaLangCharSequence:number];
  if (![((JavaUtilRegexMatcher *) nil_chk(matcher)) lookingAt]) {
    return false;
  }
  else {
    return ([matcher matches]) ? true : allowPrefixMatch;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersInternalRegexBasedMatcher)
