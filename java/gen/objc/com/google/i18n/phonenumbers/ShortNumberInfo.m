//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/libphonenumber/java/libphonenumber/src/main/java/com/google/i18n/phonenumbers/ShortNumberInfo.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/i18n/phonenumbers/CountryCodeToRegionCodeMap.h"
#include "com/google/i18n/phonenumbers/MetadataManager.h"
#include "com/google/i18n/phonenumbers/PhoneNumberUtil.h"
#include "com/google/i18n/phonenumbers/Phonenumber.h"
#include "com/google/i18n/phonenumbers/ShortNumberInfo.h"
#include "com/google/i18n/phonenumbers/internal/MatcherApi.h"
#include "com/google/i18n/phonenumbers/internal/RegexBasedMatcher.h"
#include "com/google/i18n/phonenumbers/nano/Phonemetadata.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface ComGoogleI18nPhonenumbersShortNumberInfo () {
 @public
  id<ComGoogleI18nPhonenumbersInternalMatcherApi> matcherApi_;
  id<JavaUtilMap> countryCallingCodeToRegionCodeMap_;
}

/*!
 @brief Returns a list with the region codes that match the specific country calling code.
 For
 non-geographical country calling codes, the region code 001 is returned. Also, in the case
 of no region code being found, an empty list is returned.
 */
- (id<JavaUtilList>)getRegionCodesForCountryCodeWithInt:(jint)countryCallingCode;

/*!
 @brief Helper method to check that the country calling code of the number matches the region it's
 being dialed from.
 */
- (jboolean)regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                  withNSString:(NSString *)regionDialingFrom;

- (NSString *)getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                           withJavaUtilList:(id<JavaUtilList>)regionCodes;

- (jboolean)matchesEmergencyNumberHelperWithNSString:(NSString *)number
                                        withNSString:(NSString *)regionCode
                                         withBoolean:(jboolean)allowPrefixMatch;

/*!
 @brief Gets the national significant number of the a phone number.
 Note a national significant number
 doesn't contain a national prefix or any formatting.
 <p>
 This is a temporary duplicate of the <code>getNationalSignificantNumber</code> method from
 <code>PhoneNumberUtil</code>. Ultimately a canonical static version should exist in a separate
 utility class (to prevent <code>ShortNumberInfo</code> needing to depend on PhoneNumberUtil).
 @param number  the phone number for which the national significant number is needed
 @return the national significant number of the PhoneNumber object passed in
 */
+ (NSString *)getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number;

- (jboolean)matchesPossibleNumberAndNationalNumberWithNSString:(NSString *)number
withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:(ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *)numberDesc;

@end

J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersShortNumberInfo, matcherApi_, id<ComGoogleI18nPhonenumbersInternalMatcherApi>)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersShortNumberInfo, countryCallingCodeToRegionCodeMap_, id<JavaUtilMap>)

inline JavaUtilLoggingLogger *ComGoogleI18nPhonenumbersShortNumberInfo_get_logger();
static JavaUtilLoggingLogger *ComGoogleI18nPhonenumbersShortNumberInfo_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersShortNumberInfo, logger, JavaUtilLoggingLogger *)

inline ComGoogleI18nPhonenumbersShortNumberInfo *ComGoogleI18nPhonenumbersShortNumberInfo_get_INSTANCE();
static ComGoogleI18nPhonenumbersShortNumberInfo *ComGoogleI18nPhonenumbersShortNumberInfo_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersShortNumberInfo, INSTANCE, ComGoogleI18nPhonenumbersShortNumberInfo *)

inline id<JavaUtilSet> ComGoogleI18nPhonenumbersShortNumberInfo_get_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT();
static id<JavaUtilSet> ComGoogleI18nPhonenumbersShortNumberInfo_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersShortNumberInfo, REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT, id<JavaUtilSet>)

__attribute__((unused)) static id<JavaUtilList> ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(ComGoogleI18nPhonenumbersShortNumberInfo *self, jint countryCallingCode);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersShortNumberInfo_regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(ComGoogleI18nPhonenumbersShortNumberInfo *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, NSString *regionDialingFrom);

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(ComGoogleI18nPhonenumbersShortNumberInfo *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, id<JavaUtilList> regionCodes);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersShortNumberInfo_matchesEmergencyNumberHelperWithNSString_withNSString_withBoolean_(ComGoogleI18nPhonenumbersShortNumberInfo *self, NSString *number, NSString *regionCode, jboolean allowPrefixMatch);

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(ComGoogleI18nPhonenumbersShortNumberInfo *self, NSString *number, ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *numberDesc);

__attribute__((unused)) static IOSObjectArray *ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$0();

__attribute__((unused)) static IOSObjectArray *ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$1();

__attribute__((unused)) static IOSObjectArray *ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$2();

__attribute__((unused)) static void ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_initWithNSString_withInt_(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersShortNumberInfo)

@implementation ComGoogleI18nPhonenumbersShortNumberInfo

+ (ComGoogleI18nPhonenumbersShortNumberInfo *)getInstance {
  return ComGoogleI18nPhonenumbersShortNumberInfo_getInstance();
}

- (instancetype)initWithComGoogleI18nPhonenumbersInternalMatcherApi:(id<ComGoogleI18nPhonenumbersInternalMatcherApi>)matcherApi {
  ComGoogleI18nPhonenumbersShortNumberInfo_initWithComGoogleI18nPhonenumbersInternalMatcherApi_(self, matcherApi);
  return self;
}

- (id<JavaUtilList>)getRegionCodesForCountryCodeWithInt:(jint)countryCallingCode {
  return ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(self, countryCallingCode);
}

- (jboolean)regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                  withNSString:(NSString *)regionDialingFrom {
  return ComGoogleI18nPhonenumbersShortNumberInfo_regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(self, number, regionDialingFrom);
}

- (jboolean)isPossibleShortNumberForRegionWithNSString:(NSString *)shortNumber
                                          withNSString:(NSString *)regionDialingFrom {
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionDialingFrom);
  if (phoneMetadata == nil) {
    return false;
  }
  return [((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(matcherApi_)) matchesPossibleNumberWithNSString:shortNumber withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:phoneMetadata->generalDesc_];
}

- (jboolean)isPossibleShortNumberForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                  withNSString:(NSString *)regionDialingFrom {
  if (!ComGoogleI18nPhonenumbersShortNumberInfo_regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(self, number, regionDialingFrom)) {
    return false;
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionDialingFrom);
  if (phoneMetadata == nil) {
    return false;
  }
  return [((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(matcherApi_)) matchesPossibleNumberWithNSString:ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(number) withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:phoneMetadata->generalDesc_];
}

- (jboolean)isPossibleShortNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  id<JavaUtilList> regionCodes = ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(self, [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode]);
  NSString *shortNumber = ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(number);
  for (NSString * __strong region in nil_chk(regionCodes)) {
    ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(region);
    if (phoneMetadata == nil) {
      continue;
    }
    if ([((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(matcherApi_)) matchesPossibleNumberWithNSString:shortNumber withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:phoneMetadata->generalDesc_]) {
      return true;
    }
  }
  return false;
}

- (jboolean)isValidShortNumberForRegionWithNSString:(NSString *)shortNumber
                                       withNSString:(NSString *)regionDialingFrom {
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionDialingFrom);
  if (phoneMetadata == nil) {
    return false;
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *generalDesc = phoneMetadata->generalDesc_;
  if (!ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, generalDesc)) {
    return false;
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *shortNumberDesc = phoneMetadata->shortCode_;
  return ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, shortNumberDesc);
}

- (jboolean)isValidShortNumberForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                               withNSString:(NSString *)regionDialingFrom {
  if (!ComGoogleI18nPhonenumbersShortNumberInfo_regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(self, number, regionDialingFrom)) {
    return false;
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionDialingFrom);
  if (phoneMetadata == nil) {
    return false;
  }
  NSString *shortNumber = ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(number);
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *generalDesc = phoneMetadata->generalDesc_;
  if (!ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, generalDesc)) {
    return false;
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *shortNumberDesc = phoneMetadata->shortCode_;
  return ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, shortNumberDesc);
}

- (jboolean)isValidShortNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  id<JavaUtilList> regionCodes = ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(self, [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode]);
  NSString *regionCode = ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(self, number, regionCodes);
  if ([((id<JavaUtilList>) nil_chk(regionCodes)) size] > 1 && regionCode != nil) {
    return true;
  }
  return [self isValidShortNumberForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withNSString:regionCode];
}

- (ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *)getExpectedCostForRegionWithNSString:(NSString *)shortNumber
                                                                                      withNSString:(NSString *)regionDialingFrom {
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionDialingFrom);
  if (phoneMetadata == nil) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST);
  }
  if (ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, phoneMetadata->premiumRate_)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, PREMIUM_RATE);
  }
  if (ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, phoneMetadata->standardRate_)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, STANDARD_RATE);
  }
  if (ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, phoneMetadata->tollFree_)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, TOLL_FREE);
  }
  if ([self isEmergencyNumberWithNSString:shortNumber withNSString:regionDialingFrom]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, TOLL_FREE);
  }
  return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST);
}

- (ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *)getExpectedCostForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                                                              withNSString:(NSString *)regionDialingFrom {
  if (!ComGoogleI18nPhonenumbersShortNumberInfo_regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(self, number, regionDialingFrom)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST);
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionDialingFrom);
  if (phoneMetadata == nil) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST);
  }
  NSString *shortNumber = ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(number);
  if (ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, phoneMetadata->premiumRate_)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, PREMIUM_RATE);
  }
  if (ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, phoneMetadata->standardRate_)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, STANDARD_RATE);
  }
  if (ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, shortNumber, phoneMetadata->tollFree_)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, TOLL_FREE);
  }
  if ([self isEmergencyNumberWithNSString:shortNumber withNSString:regionDialingFrom]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, TOLL_FREE);
  }
  return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST);
}

- (ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *)getExpectedCostWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  id<JavaUtilList> regionCodes = ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(self, [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode]);
  if ([((id<JavaUtilList>) nil_chk(regionCodes)) size] == 0) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST);
  }
  if ([regionCodes size] == 1) {
    return [self getExpectedCostForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withNSString:[regionCodes getWithInt:0]];
  }
  ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *cost = JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, TOLL_FREE);
  for (NSString * __strong regionCode in regionCodes) {
    ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *costForRegion = [self getExpectedCostForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withNSString:regionCode];
    switch ([costForRegion ordinal]) {
      case ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_Enum_PREMIUM_RATE:
      return JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, PREMIUM_RATE);
      case ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_Enum_UNKNOWN_COST:
      cost = JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST);
      break;
      case ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_Enum_STANDARD_RATE:
      if (cost != JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST)) {
        cost = JreLoadEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, STANDARD_RATE);
      }
      break;
      case ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_Enum_TOLL_FREE:
      break;
      default:
      [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersShortNumberInfo_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:JreStrcat("$@", @"Unrecognised cost for region: ", costForRegion)];
    }
  }
  return cost;
}

- (NSString *)getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                           withJavaUtilList:(id<JavaUtilList>)regionCodes {
  return ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(self, number, regionCodes);
}

- (id<JavaUtilSet>)getSupportedRegions {
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataSupportedRegions());
}

- (NSString *)getExampleShortNumberWithNSString:(NSString *)regionCode {
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionCode);
  if (phoneMetadata == nil) {
    return @"";
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *desc = phoneMetadata->shortCode_;
  if (![((NSString *) nil_chk(((ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *) nil_chk(desc))->exampleNumber_)) isEqual:@""]) {
    return desc->exampleNumber_;
  }
  return @"";
}

- (NSString *)getExampleShortNumberForCostWithNSString:(NSString *)regionCode
withComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost:(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *)cost {
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionCode);
  if (phoneMetadata == nil) {
    return @"";
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *desc = nil;
  switch ([cost ordinal]) {
    case ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_Enum_TOLL_FREE:
    desc = phoneMetadata->tollFree_;
    break;
    case ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_Enum_STANDARD_RATE:
    desc = phoneMetadata->standardRate_;
    break;
    case ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_Enum_PREMIUM_RATE:
    desc = phoneMetadata->premiumRate_;
    break;
    default:
    ;
  }
  if (desc != nil && ![((NSString *) nil_chk(desc->exampleNumber_)) isEqual:@""]) {
    return desc->exampleNumber_;
  }
  return @"";
}

- (jboolean)connectsToEmergencyNumberWithNSString:(NSString *)number
                                     withNSString:(NSString *)regionCode {
  return ComGoogleI18nPhonenumbersShortNumberInfo_matchesEmergencyNumberHelperWithNSString_withNSString_withBoolean_(self, number, regionCode, true);
}

- (jboolean)isEmergencyNumberWithNSString:(NSString *)number
                             withNSString:(NSString *)regionCode {
  return ComGoogleI18nPhonenumbersShortNumberInfo_matchesEmergencyNumberHelperWithNSString_withNSString_withBoolean_(self, number, regionCode, false);
}

- (jboolean)matchesEmergencyNumberHelperWithNSString:(NSString *)number
                                        withNSString:(NSString *)regionCode
                                         withBoolean:(jboolean)allowPrefixMatch {
  return ComGoogleI18nPhonenumbersShortNumberInfo_matchesEmergencyNumberHelperWithNSString_withNSString_withBoolean_(self, number, regionCode, allowPrefixMatch);
}

- (jboolean)isCarrierSpecificWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  id<JavaUtilList> regionCodes = ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(self, [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode]);
  NSString *regionCode = ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(self, number, regionCodes);
  NSString *nationalNumber = ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(number);
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionCode);
  return (phoneMetadata != nil) && (ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, nationalNumber, ((ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *) nil_chk(phoneMetadata))->carrierSpecific_));
}

+ (NSString *)getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  return ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(number);
}

- (jboolean)matchesPossibleNumberAndNationalNumberWithNSString:(NSString *)number
withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:(ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *)numberDesc {
  return ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, number, numberDesc);
}

- (void)dealloc {
  RELEASE_(matcherApi_);
  RELEASE_(countryCallingCodeToRegionCodeMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComGoogleI18nPhonenumbersShortNumberInfo;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 1, 2, -1, 3, -1, -1 },
    { NULL, "Z", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, 8, -1 },
    { NULL, "Z", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 7, -1, -1, 12, -1 },
    { NULL, "Z", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 10, -1, -1, -1, -1 },
    { NULL, "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", 0x1, 14, 7, -1, -1, 15, -1 },
    { NULL, "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", 0x1, 14, 5, -1, -1, -1, -1 },
    { NULL, "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", 0x1, 16, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 17, 18, -1, 19, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x0, -1, -1, -1, 20, -1, -1 },
    { NULL, "LNSString;", 0x0, 21, 22, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 23, 24, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 25, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 26, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 27, 28, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 29, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 30, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 31, 32, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getInstance);
  methods[1].selector = @selector(initWithComGoogleI18nPhonenumbersInternalMatcherApi:);
  methods[2].selector = @selector(getRegionCodesForCountryCodeWithInt:);
  methods[3].selector = @selector(regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withNSString:);
  methods[4].selector = @selector(isPossibleShortNumberForRegionWithNSString:withNSString:);
  methods[5].selector = @selector(isPossibleShortNumberForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withNSString:);
  methods[6].selector = @selector(isPossibleShortNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:);
  methods[7].selector = @selector(isValidShortNumberForRegionWithNSString:withNSString:);
  methods[8].selector = @selector(isValidShortNumberForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withNSString:);
  methods[9].selector = @selector(isValidShortNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:);
  methods[10].selector = @selector(getExpectedCostForRegionWithNSString:withNSString:);
  methods[11].selector = @selector(getExpectedCostForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withNSString:);
  methods[12].selector = @selector(getExpectedCostWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:);
  methods[13].selector = @selector(getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withJavaUtilList:);
  methods[14].selector = @selector(getSupportedRegions);
  methods[15].selector = @selector(getExampleShortNumberWithNSString:);
  methods[16].selector = @selector(getExampleShortNumberForCostWithNSString:withComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost:);
  methods[17].selector = @selector(connectsToEmergencyNumberWithNSString:withNSString:);
  methods[18].selector = @selector(isEmergencyNumberWithNSString:withNSString:);
  methods[19].selector = @selector(matchesEmergencyNumberHelperWithNSString:withNSString:withBoolean:);
  methods[20].selector = @selector(isCarrierSpecificWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:);
  methods[21].selector = @selector(getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:);
  methods[22].selector = @selector(matchesPossibleNumberAndNationalNumberWithNSString:withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "INSTANCE", "LComGoogleI18nPhonenumbersShortNumberInfo;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 35, 36, -1 },
    { "matcherApi_", "LComGoogleI18nPhonenumbersInternalMatcherApi;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "countryCallingCodeToRegionCodeMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 37, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleI18nPhonenumbersInternalMatcherApi;", "getRegionCodesForCountryCode", "I", "(I)Ljava/util/List<Ljava/lang/String;>;", "regionDialingFromMatchesNumber", "LComGoogleI18nPhonenumbersPhonenumber_PhoneNumber;LNSString;", "isPossibleShortNumberForRegion", "LNSString;LNSString;", (void *)&ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$0, "isPossibleShortNumber", "LComGoogleI18nPhonenumbersPhonenumber_PhoneNumber;", "isValidShortNumberForRegion", (void *)&ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$1, "isValidShortNumber", "getExpectedCostForRegion", (void *)&ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$2, "getExpectedCost", "getRegionCodeForShortNumberFromRegionList", "LComGoogleI18nPhonenumbersPhonenumber_PhoneNumber;LJavaUtilList;", "(Lcom/google/i18n/phonenumbers/Phonenumber$PhoneNumber;Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;", "()Ljava/util/Set<Ljava/lang/String;>;", "getExampleShortNumber", "LNSString;", "getExampleShortNumberForCost", "LNSString;LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", "connectsToEmergencyNumber", "isEmergencyNumber", "matchesEmergencyNumberHelper", "LNSString;LNSString;Z", "isCarrierSpecific", "getNationalSignificantNumber", "matchesPossibleNumberAndNationalNumber", "LNSString;LComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc;", &ComGoogleI18nPhonenumbersShortNumberInfo_logger, &ComGoogleI18nPhonenumbersShortNumberInfo_INSTANCE, &ComGoogleI18nPhonenumbersShortNumberInfo_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT, "Ljava/util/Set<Ljava/lang/String;>;", "Ljava/util/Map<Ljava/lang/Integer;Ljava/util/List<Ljava/lang/String;>;>;", "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;" };
  static const J2ObjcClassInfo _ComGoogleI18nPhonenumbersShortNumberInfo = { "ShortNumberInfo", "com.google.i18n.phonenumbers", ptrTable, methods, fields, 7, 0x1, 23, 5, -1, 38, -1, -1, -1 };
  return &_ComGoogleI18nPhonenumbersShortNumberInfo;
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersShortNumberInfo class]) {
    JreStrongAssign(&ComGoogleI18nPhonenumbersShortNumberInfo_logger, JavaUtilLoggingLogger_getLoggerWithNSString_([ComGoogleI18nPhonenumbersShortNumberInfo_class_() getName]));
    JreStrongAssignAndConsume(&ComGoogleI18nPhonenumbersShortNumberInfo_INSTANCE, new_ComGoogleI18nPhonenumbersShortNumberInfo_initWithComGoogleI18nPhonenumbersInternalMatcherApi_(ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_create()));
    JreStrongAssignAndConsume(&ComGoogleI18nPhonenumbersShortNumberInfo_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT, new_JavaUtilHashSet_init());
    {
      [ComGoogleI18nPhonenumbersShortNumberInfo_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT addWithId:@"BR"];
      [ComGoogleI18nPhonenumbersShortNumberInfo_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT addWithId:@"CL"];
      [ComGoogleI18nPhonenumbersShortNumberInfo_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT addWithId:@"NI"];
    }
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersShortNumberInfo)
  }
}

@end

ComGoogleI18nPhonenumbersShortNumberInfo *ComGoogleI18nPhonenumbersShortNumberInfo_getInstance() {
  ComGoogleI18nPhonenumbersShortNumberInfo_initialize();
  return ComGoogleI18nPhonenumbersShortNumberInfo_INSTANCE;
}

void ComGoogleI18nPhonenumbersShortNumberInfo_initWithComGoogleI18nPhonenumbersInternalMatcherApi_(ComGoogleI18nPhonenumbersShortNumberInfo *self, id<ComGoogleI18nPhonenumbersInternalMatcherApi> matcherApi) {
  NSObject_init(self);
  JreStrongAssign(&self->matcherApi_, matcherApi);
  JreStrongAssign(&self->countryCallingCodeToRegionCodeMap_, ComGoogleI18nPhonenumbersCountryCodeToRegionCodeMap_getCountryCodeToRegionCodeMap());
}

ComGoogleI18nPhonenumbersShortNumberInfo *new_ComGoogleI18nPhonenumbersShortNumberInfo_initWithComGoogleI18nPhonenumbersInternalMatcherApi_(id<ComGoogleI18nPhonenumbersInternalMatcherApi> matcherApi) {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersShortNumberInfo, initWithComGoogleI18nPhonenumbersInternalMatcherApi_, matcherApi)
}

ComGoogleI18nPhonenumbersShortNumberInfo *create_ComGoogleI18nPhonenumbersShortNumberInfo_initWithComGoogleI18nPhonenumbersInternalMatcherApi_(id<ComGoogleI18nPhonenumbersInternalMatcherApi> matcherApi) {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersShortNumberInfo, initWithComGoogleI18nPhonenumbersInternalMatcherApi_, matcherApi)
}

id<JavaUtilList> ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(ComGoogleI18nPhonenumbersShortNumberInfo *self, jint countryCallingCode) {
  id<JavaUtilList> regionCodes = [((id<JavaUtilMap>) nil_chk(self->countryCallingCodeToRegionCodeMap_)) getWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)];
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(regionCodes == nil ? create_JavaUtilArrayList_initWithInt_(0) : (id) regionCodes);
}

jboolean ComGoogleI18nPhonenumbersShortNumberInfo_regionDialingFromMatchesNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(ComGoogleI18nPhonenumbersShortNumberInfo *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, NSString *regionDialingFrom) {
  id<JavaUtilList> regionCodes = ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodesForCountryCodeWithInt_(self, [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode]);
  return [((id<JavaUtilList>) nil_chk(regionCodes)) containsWithId:regionDialingFrom];
}

NSString *ComGoogleI18nPhonenumbersShortNumberInfo_getRegionCodeForShortNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(ComGoogleI18nPhonenumbersShortNumberInfo *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, id<JavaUtilList> regionCodes) {
  if ([((id<JavaUtilList>) nil_chk(regionCodes)) size] == 0) {
    return nil;
  }
  else if ([regionCodes size] == 1) {
    return [regionCodes getWithInt:0];
  }
  NSString *nationalNumber = ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(number);
  for (NSString * __strong regionCode in regionCodes) {
    ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *phoneMetadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionCode);
    if (phoneMetadata != nil && ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(self, nationalNumber, phoneMetadata->shortCode_)) {
      return regionCode;
    }
  }
  return nil;
}

jboolean ComGoogleI18nPhonenumbersShortNumberInfo_matchesEmergencyNumberHelperWithNSString_withNSString_withBoolean_(ComGoogleI18nPhonenumbersShortNumberInfo *self, NSString *number, NSString *regionCode, jboolean allowPrefixMatch) {
  number = ComGoogleI18nPhonenumbersPhoneNumberUtil_extractPossibleNumberWithNSString_(number);
  if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(ComGoogleI18nPhonenumbersPhoneNumberUtil, PLUS_CHARS_PATTERN))) matcherWithJavaLangCharSequence:number])) lookingAt]) {
    return false;
  }
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersMetadataManager_getShortNumberMetadataForRegionWithNSString_(regionCode);
  if (metadata == nil || metadata->emergency_ == nil) {
    return false;
  }
  NSString *normalizedNumber = ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsOnlyWithNSString_(number);
  ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *emergencyDesc = metadata->emergency_;
  jboolean allowPrefixMatchForRegion = allowPrefixMatch && ![((id<JavaUtilSet>) nil_chk(ComGoogleI18nPhonenumbersShortNumberInfo_REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT)) containsWithId:regionCode];
  return [((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(self->matcherApi_)) matchesNationalNumberWithNSString:normalizedNumber withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:emergencyDesc withBoolean:allowPrefixMatchForRegion];
}

NSString *ComGoogleI18nPhonenumbersShortNumberInfo_getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number) {
  ComGoogleI18nPhonenumbersShortNumberInfo_initialize();
  JavaLangStringBuilder *nationalNumber = create_JavaLangStringBuilder_init();
  if ([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) isItalianLeadingZero]) {
    IOSCharArray *zeros = [IOSCharArray arrayWithLength:[number getNumberOfLeadingZeros]];
    JavaUtilArrays_fillWithCharArray_withChar_(zeros, '0');
    [nationalNumber appendWithNSString:[NSString stringWithCharacters:zeros]];
  }
  [nationalNumber appendWithLong:[number getNationalNumber]];
  return [nationalNumber description];
}

jboolean ComGoogleI18nPhonenumbersShortNumberInfo_matchesPossibleNumberAndNationalNumberWithNSString_withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc_(ComGoogleI18nPhonenumbersShortNumberInfo *self, NSString *number, ComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc *numberDesc) {
  return [((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(self->matcherApi_)) matchesPossibleNumberWithNSString:number withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:numberDesc] && [self->matcherApi_ matchesNationalNumberWithNSString:number withComGoogleI18nPhonenumbersNanoPhonemetadata_PhoneNumberDesc:numberDesc withBoolean:false];
}

IOSObjectArray *ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleI18nPhonenumbersShortNumberInfo__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersShortNumberInfo)

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost)

ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_values_[4];

@implementation ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost

+ (IOSObjectArray *)values {
  return ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_values();
}

+ (ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *)valueOfWithNSString:(NSString *)name {
  return ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TOLL_FREE", "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "STANDARD_RATE", "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "PREMIUM_RATE", "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "UNKNOWN_COST", "LComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, TOLL_FREE), &JreEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, STANDARD_RATE), &JreEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, PREMIUM_RATE), &JreEnum(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost, UNKNOWN_COST), "LComGoogleI18nPhonenumbersShortNumberInfo;", "Ljava/lang/Enum<Lcom/google/i18n/phonenumbers/ShortNumberInfo$ShortNumberCost;>;" };
  static const J2ObjcClassInfo _ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost = { "ShortNumberCost", "com.google.i18n.phonenumbers", ptrTable, methods, fields, 7, 0x4019, 2, 4, 6, -1, -1, 7, -1 };
  return &_ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost;
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"TOLL_FREE", @"STANDARD_RATE", @"PREMIUM_RATE", @"UNKNOWN_COST",
    };
    for (jint i = 0; i < 4; i++) {
      (ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost)
  }
}

@end

void ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_initWithNSString_withInt_(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_values() {
  ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_values_ count:4 type:ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_class_()];
}

ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_valueOfWithNSString_(NSString *name) {
  ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_initialize();
  for (int i = 0; i < 4; i++) {
    ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *e = ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost *ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_fromOrdinal(NSUInteger ordinal) {
  ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersShortNumberInfo_ShortNumberCost)
