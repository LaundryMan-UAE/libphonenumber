//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/libphonenumber/java/libphonenumber/src/main/java/com/google/i18n/phonenumbers/NumberParseException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleI18nPhonenumbersNumberParseException")
#ifdef RESTRICT_ComGoogleI18nPhonenumbersNumberParseException
#define INCLUDE_ALL_ComGoogleI18nPhonenumbersNumberParseException 0
#else
#define INCLUDE_ALL_ComGoogleI18nPhonenumbersNumberParseException 1
#endif
#undef RESTRICT_ComGoogleI18nPhonenumbersNumberParseException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleI18nPhonenumbersNumberParseException_) && (INCLUDE_ALL_ComGoogleI18nPhonenumbersNumberParseException || defined(INCLUDE_ComGoogleI18nPhonenumbersNumberParseException))
#define ComGoogleI18nPhonenumbersNumberParseException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class ComGoogleI18nPhonenumbersNumberParseException_ErrorType;
@class JavaLangThrowable;

/*!
 @brief Generic exception class for errors encountered when parsing phone numbers.
 */
@interface ComGoogleI18nPhonenumbersNumberParseException : JavaLangException

#pragma mark Public

- (instancetype __nonnull)initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType:(ComGoogleI18nPhonenumbersNumberParseException_ErrorType *)errorType
                                                                             withNSString:(NSString *)message;

/*!
 @brief Returns the error type of the exception that has been thrown.
 */
- (ComGoogleI18nPhonenumbersNumberParseException_ErrorType *)getErrorType;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersNumberParseException)

FOUNDATION_EXPORT void ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(ComGoogleI18nPhonenumbersNumberParseException *self, ComGoogleI18nPhonenumbersNumberParseException_ErrorType *errorType, NSString *message);

FOUNDATION_EXPORT ComGoogleI18nPhonenumbersNumberParseException *new_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(ComGoogleI18nPhonenumbersNumberParseException_ErrorType *errorType, NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleI18nPhonenumbersNumberParseException *create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(ComGoogleI18nPhonenumbersNumberParseException_ErrorType *errorType, NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleI18nPhonenumbersNumberParseException)

#endif

#if !defined (ComGoogleI18nPhonenumbersNumberParseException_ErrorType_) && (INCLUDE_ALL_ComGoogleI18nPhonenumbersNumberParseException || defined(INCLUDE_ComGoogleI18nPhonenumbersNumberParseException_ErrorType))
#define ComGoogleI18nPhonenumbersNumberParseException_ErrorType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComGoogleI18nPhonenumbersNumberParseException_ErrorType_Enum) {
  ComGoogleI18nPhonenumbersNumberParseException_ErrorType_Enum_INVALID_COUNTRY_CODE = 0,
  ComGoogleI18nPhonenumbersNumberParseException_ErrorType_Enum_NOT_A_NUMBER = 1,
  ComGoogleI18nPhonenumbersNumberParseException_ErrorType_Enum_TOO_SHORT_AFTER_IDD = 2,
  ComGoogleI18nPhonenumbersNumberParseException_ErrorType_Enum_TOO_SHORT_NSN = 3,
  ComGoogleI18nPhonenumbersNumberParseException_ErrorType_Enum_TOO_LONG = 4,
};

/*!
 @brief The reason that a string could not be interpreted as a phone number.
 */
@interface ComGoogleI18nPhonenumbersNumberParseException_ErrorType : JavaLangEnum

#pragma mark Public

+ (ComGoogleI18nPhonenumbersNumberParseException_ErrorType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComGoogleI18nPhonenumbersNumberParseException_ErrorType_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ComGoogleI18nPhonenumbersNumberParseException_ErrorType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_values_[];

/*!
 @brief The country code supplied did not belong to a supported country or non-geographical entity.
 */
inline ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_get_INVALID_COUNTRY_CODE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE)

/*!
 @brief This generally indicates the string passed in had less than 3 digits in it.More
  specifically, the number failed to match the regular expression VALID_PHONE_NUMBER in
  PhoneNumberUtil.java.
 */
inline ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_get_NOT_A_NUMBER(void);
J2OBJC_ENUM_CONSTANT(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, NOT_A_NUMBER)

/*!
 @brief This indicates the string started with an international dialing prefix, but after this was
  stripped from the number, had less digits than any valid phone number (including country
  code) could have.
 */
inline ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_get_TOO_SHORT_AFTER_IDD(void);
J2OBJC_ENUM_CONSTANT(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_SHORT_AFTER_IDD)

/*!
 @brief This indicates the string, after any country code has been stripped, had less digits than any
  valid phone number could have.
 */
inline ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_get_TOO_SHORT_NSN(void);
J2OBJC_ENUM_CONSTANT(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_SHORT_NSN)

/*!
 @brief This indicates the string had more digits than any valid phone number could have.
 */
inline ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_get_TOO_LONG(void);
J2OBJC_ENUM_CONSTANT(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_LONG)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_values(void);

FOUNDATION_EXPORT ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleI18nPhonenumbersNumberParseException_ErrorType *ComGoogleI18nPhonenumbersNumberParseException_ErrorType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleI18nPhonenumbersNumberParseException_ErrorType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleI18nPhonenumbersNumberParseException")
