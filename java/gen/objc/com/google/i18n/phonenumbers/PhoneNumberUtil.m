//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/marcussmith/Laundryman/Libraries/libphonenumber/java/libphonenumber/src/main/java/com/google/i18n/phonenumbers/PhoneNumberUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/i18n/phonenumbers/AsYouTypeFormatter.h"
#include "com/google/i18n/phonenumbers/CountryCodeToRegionCodeMap.h"
#include "com/google/i18n/phonenumbers/MetadataLoader.h"
#include "com/google/i18n/phonenumbers/MetadataManager.h"
#include "com/google/i18n/phonenumbers/MetadataSource.h"
#include "com/google/i18n/phonenumbers/MultiFileMetadataSourceImpl.h"
#include "com/google/i18n/phonenumbers/NumberParseException.h"
#include "com/google/i18n/phonenumbers/PhoneNumberMatcher.h"
#include "com/google/i18n/phonenumbers/PhoneNumberUtil.h"
#include "com/google/i18n/phonenumbers/Phonemetadata.h"
#include "com/google/i18n/phonenumbers/Phonenumber.h"
#include "com/google/i18n/phonenumbers/internal/MatcherApi.h"
#include "com/google/i18n/phonenumbers/internal/RegexBasedMatcher.h"
#include "com/google/i18n/phonenumbers/internal/RegexCache.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/Spliterator.h"
#include "java/util/TreeSet.h"
#include "java/util/function/Consumer.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil () {
 @public
  id<ComGoogleI18nPhonenumbersMetadataSource> metadataSource_;
  id<JavaUtilMap> countryCallingCodeToRegionCodeMap_;
  id<ComGoogleI18nPhonenumbersInternalMatcherApi> matcherApi_;
  id<JavaUtilSet> nanpaRegions_;
  ComGoogleI18nPhonenumbersInternalRegexCache *regexCache_;
  id<JavaUtilSet> supportedRegions_;
  id<JavaUtilSet> countryCodesForNonGeographicalRegion_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberUtil, metadataSource_, id<ComGoogleI18nPhonenumbersMetadataSource>)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberUtil, countryCallingCodeToRegionCodeMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberUtil, matcherApi_, id<ComGoogleI18nPhonenumbersInternalMatcherApi>)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberUtil, nanpaRegions_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberUtil, regexCache_, ComGoogleI18nPhonenumbersInternalRegexCache *)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberUtil, supportedRegions_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberUtil, countryCodesForNonGeographicalRegion_, id<JavaUtilSet>)

inline JavaUtilLoggingLogger *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_logger(void);
static JavaUtilLoggingLogger *ComGoogleI18nPhonenumbersPhoneNumberUtil_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, logger, JavaUtilLoggingLogger *)

inline jint ComGoogleI18nPhonenumbersPhoneNumberUtil_get_MIN_LENGTH_FOR_NSN(void);
#define ComGoogleI18nPhonenumbersPhoneNumberUtil_MIN_LENGTH_FOR_NSN 2
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleI18nPhonenumbersPhoneNumberUtil, MIN_LENGTH_FOR_NSN, jint)

inline jint ComGoogleI18nPhonenumbersPhoneNumberUtil_get_MAX_INPUT_STRING_LENGTH(void);
#define ComGoogleI18nPhonenumbersPhoneNumberUtil_MAX_INPUT_STRING_LENGTH 250
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleI18nPhonenumbersPhoneNumberUtil, MAX_INPUT_STRING_LENGTH, jint)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_UNKNOWN_REGION(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION = @"ZZ";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, UNKNOWN_REGION, NSString *)

inline jint ComGoogleI18nPhonenumbersPhoneNumberUtil_get_NANPA_COUNTRY_CODE(void);
#define ComGoogleI18nPhonenumbersPhoneNumberUtil_NANPA_COUNTRY_CODE 1
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleI18nPhonenumbersPhoneNumberUtil, NANPA_COUNTRY_CODE, jint)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX = @"3";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX, NSString *)

inline id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_get_MOBILE_TOKEN_MAPPINGS(void);
static id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_MOBILE_TOKEN_MAPPINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, MOBILE_TOKEN_MAPPINGS, id<JavaUtilMap>)

inline id<JavaUtilSet> ComGoogleI18nPhonenumbersPhoneNumberUtil_get_GEO_MOBILE_COUNTRIES_WITHOUT_MOBILE_AREA_CODES(void);
static id<JavaUtilSet> ComGoogleI18nPhonenumbersPhoneNumberUtil_GEO_MOBILE_COUNTRIES_WITHOUT_MOBILE_AREA_CODES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, GEO_MOBILE_COUNTRIES_WITHOUT_MOBILE_AREA_CODES, id<JavaUtilSet>)

inline id<JavaUtilSet> ComGoogleI18nPhonenumbersPhoneNumberUtil_get_GEO_MOBILE_COUNTRIES(void);
static id<JavaUtilSet> ComGoogleI18nPhonenumbersPhoneNumberUtil_GEO_MOBILE_COUNTRIES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, GEO_MOBILE_COUNTRIES, id<JavaUtilSet>)

inline jchar ComGoogleI18nPhonenumbersPhoneNumberUtil_get_STAR_SIGN(void);
#define ComGoogleI18nPhonenumbersPhoneNumberUtil_STAR_SIGN '*'
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleI18nPhonenumbersPhoneNumberUtil, STAR_SIGN, jchar)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_RFC3966_EXTN_PREFIX(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_EXTN_PREFIX = @";ext=";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, RFC3966_EXTN_PREFIX, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_RFC3966_PREFIX(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_PREFIX = @"tel:";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, RFC3966_PREFIX, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_RFC3966_PHONE_CONTEXT(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_PHONE_CONTEXT = @";phone-context=";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, RFC3966_PHONE_CONTEXT, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_RFC3966_ISDN_SUBADDRESS(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_ISDN_SUBADDRESS = @";isub=";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, RFC3966_ISDN_SUBADDRESS, NSString *)

inline id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_get_DIALLABLE_CHAR_MAPPINGS(void);
static id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_DIALLABLE_CHAR_MAPPINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, DIALLABLE_CHAR_MAPPINGS, id<JavaUtilMap>)

inline id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_get_ALPHA_MAPPINGS(void);
static id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_MAPPINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, ALPHA_MAPPINGS, id<JavaUtilMap>)

inline id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_get_ALPHA_PHONE_MAPPINGS(void);
static id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_PHONE_MAPPINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, ALPHA_PHONE_MAPPINGS, id<JavaUtilMap>)

inline id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_get_ALL_PLUS_NUMBER_GROUPING_SYMBOLS(void);
static id<JavaUtilMap> ComGoogleI18nPhonenumbersPhoneNumberUtil_ALL_PLUS_NUMBER_GROUPING_SYMBOLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, ALL_PLUS_NUMBER_GROUPING_SYMBOLS, id<JavaUtilMap>)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_SINGLE_INTERNATIONAL_PREFIX(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_SINGLE_INTERNATIONAL_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, SINGLE_INTERNATIONAL_PREFIX, JavaUtilRegexPattern *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_DIGITS(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_DIGITS = @"\\p{Nd}";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, DIGITS, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_VALID_ALPHA(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_ALPHA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, VALID_ALPHA, NSString *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_SEPARATOR_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_SEPARATOR_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, SEPARATOR_PATTERN, JavaUtilRegexPattern *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_CAPTURING_DIGIT_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_CAPTURING_DIGIT_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, CAPTURING_DIGIT_PATTERN, JavaUtilRegexPattern *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_VALID_START_CHAR(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_START_CHAR = @"[+\uff0b\\p{Nd}]";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, VALID_START_CHAR, NSString *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_VALID_START_CHAR_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_START_CHAR_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, VALID_START_CHAR_PATTERN, JavaUtilRegexPattern *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_SECOND_NUMBER_START(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_SECOND_NUMBER_START = @"[\\\\/] *x";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, SECOND_NUMBER_START, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_UNWANTED_END_CHARS(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_UNWANTED_END_CHARS = @"[[\\P{N}&&\\P{L}]&&[^#]]+$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, UNWANTED_END_CHARS, NSString *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_VALID_ALPHA_PHONE_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_ALPHA_PHONE_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, VALID_ALPHA_PHONE_PATTERN, JavaUtilRegexPattern *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_VALID_PHONE_NUMBER(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PHONE_NUMBER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, VALID_PHONE_NUMBER, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_DEFAULT_EXTN_PREFIX(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_DEFAULT_EXTN_PREFIX = @" ext. ";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, DEFAULT_EXTN_PREFIX, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_CAPTURING_EXTN_DIGITS(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_CAPTURING_EXTN_DIGITS = @"(\\p{Nd}{1,7})";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, CAPTURING_EXTN_DIGITS, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_EXTN_PATTERNS_FOR_PARSING(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERNS_FOR_PARSING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, EXTN_PATTERNS_FOR_PARSING, NSString *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_EXTN_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, EXTN_PATTERN, JavaUtilRegexPattern *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_VALID_PHONE_NUMBER_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PHONE_NUMBER_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, VALID_PHONE_NUMBER_PATTERN, JavaUtilRegexPattern *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_FIRST_GROUP_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_FIRST_GROUP_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, FIRST_GROUP_PATTERN, JavaUtilRegexPattern *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_NP_STRING(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_NP_STRING = @"$NP";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, NP_STRING, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_FG_STRING(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_FG_STRING = @"$FG";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, FG_STRING, NSString *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_CC_STRING(void);
static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_CC_STRING = @"$CC";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, CC_STRING, NSString *)

inline JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_FIRST_GROUP_ONLY_PREFIX_PATTERN(void);
static JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_FIRST_GROUP_ONLY_PREFIX_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberUtil, FIRST_GROUP_ONLY_PREFIX_PATTERN, JavaUtilRegexPattern *)

inline ComGoogleI18nPhonenumbersPhoneNumberUtil *ComGoogleI18nPhonenumbersPhoneNumberUtil_get_instance(void);
inline ComGoogleI18nPhonenumbersPhoneNumberUtil *ComGoogleI18nPhonenumbersPhoneNumberUtil_set_instance(ComGoogleI18nPhonenumbersPhoneNumberUtil *value);
static ComGoogleI18nPhonenumbersPhoneNumberUtil *ComGoogleI18nPhonenumbersPhoneNumberUtil_instance;
J2OBJC_STATIC_FIELD_OBJ(ComGoogleI18nPhonenumbersPhoneNumberUtil, instance, ComGoogleI18nPhonenumbersPhoneNumberUtil *)

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_createExtnPatternWithNSString_(NSString *singleExtnSymbols);

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeHelperWithJavaLangCharSequence_withJavaUtilMap_withBoolean_(id<JavaLangCharSequence> number, id<JavaUtilMap> normalizationReplacements, jboolean removeNonMatches);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasPossibleNumberDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_(ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *desc);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_(ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *desc);

__attribute__((unused)) static id<JavaUtilSet> ComGoogleI18nPhonenumbersPhoneNumberUtil_getSupportedTypesForMetadataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil *ComGoogleI18nPhonenumbersPhoneNumberUtil_createInstanceWithComGoogleI18nPhonenumbersMetadataSource_(id<ComGoogleI18nPhonenumbersMetadataSource> metadataSource);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *regionCode);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, jint countryCallingCode);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, jint countryCallingCode, NSString *regionCode);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_rawInputContainsNationalPrefixWithNSString_withNSString_withNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *rawInput, NSString *nationalPrefix, NSString *regionCode);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_hasFormattingPatternForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, jint countryCallingCode, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, JavaLangStringBuilder *formattedNumber);

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat);

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, id<JavaLangCharSequence> carrierCode);

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnUsingPatternWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *nationalNumber, ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *formattingPattern, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, id<JavaLangCharSequence> carrierCode);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_maybeAppendFormattedExtensionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, JavaLangStringBuilder *formattedNumber);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *ComGoogleI18nPhonenumbersPhoneNumberUtil_getNumberTypeHelperWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *nationalNumber, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata);

__attribute__((unused)) static NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_getRegionCodeForNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, id<JavaUtilList> regionCodes);

__attribute__((unused)) static jint ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryCodeForValidRegionWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *regionCode);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *type);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_parsePrefixAsIddWithJavaUtilRegexPattern_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, JavaUtilRegexPattern *iddPattern, JavaLangStringBuilder *number);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_checkRegionForParsingWithJavaLangCharSequence_withNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> numberToParse, NSString *defaultRegion);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_parseHelperWithJavaLangCharSequence_withNSString_withBoolean_withBoolean_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> numberToParse, NSString *defaultRegion, jboolean keepRawInput, jboolean checkRegion, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumber);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_buildNationalNumberForParsingWithNSString_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *numberToParse, JavaLangStringBuilder *nationalNumber);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *ComGoogleI18nPhonenumbersPhoneNumberUtil_copyCoreFieldsOnlyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumberIn);

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_isNationalNumberSuffixOfTheOtherWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *firstNumber, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumber);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *self, NSString *__name, jint __ordinal);

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1 : ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1 *self, NSString *__name, jint __ordinal);

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2 : ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2 *self, NSString *__name, jint __ordinal);

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3 : ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3 *self, NSString *__name, jint __ordinal);

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1 : NSObject < ComGoogleI18nPhonenumbersPhoneNumberMatcher_NumberGroupingChecker >

- (jboolean)checkGroupsWithComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util
               withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                          withJavaLangStringBuilder:(JavaLangStringBuilder *)normalizedCandidate
                                                  withNSStringArray:(IOSObjectArray *)expectedNumberGroups;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1_init(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1 *self);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1 *new_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1 *create_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1_init(void);

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4 : ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4 *self, NSString *__name, jint __ordinal);

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1 : NSObject < ComGoogleI18nPhonenumbersPhoneNumberMatcher_NumberGroupingChecker >

- (jboolean)checkGroupsWithComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util
               withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                          withJavaLangStringBuilder:(JavaLangStringBuilder *)normalizedCandidate
                                                  withNSStringArray:(IOSObjectArray *)expectedNumberGroups;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1_init(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1 *self);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1 *new_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1 *create_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1_init(void);

@interface ComGoogleI18nPhonenumbersPhoneNumberUtil_1 : NSObject < JavaLangIterable > {
 @public
  ComGoogleI18nPhonenumbersPhoneNumberUtil *this$0_;
  id<JavaLangCharSequence> val$text_;
  NSString *val$defaultRegion_;
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *val$leniency_;
  jlong val$maxTries_;
}

- (id<JavaUtilIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleI18nPhonenumbersPhoneNumberUtil_1)

__attribute__((unused)) static void ComGoogleI18nPhonenumbersPhoneNumberUtil_1_initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(ComGoogleI18nPhonenumbersPhoneNumberUtil_1 *self, ComGoogleI18nPhonenumbersPhoneNumberUtil *outer$, id<JavaLangCharSequence> capture$0, NSString *capture$1, ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *capture$2, jlong capture$3);

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_1 *new_ComGoogleI18nPhonenumbersPhoneNumberUtil_1_initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(ComGoogleI18nPhonenumbersPhoneNumberUtil *outer$, id<JavaLangCharSequence> capture$0, NSString *capture$1, ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *capture$2, jlong capture$3) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleI18nPhonenumbersPhoneNumberUtil_1 *create_ComGoogleI18nPhonenumbersPhoneNumberUtil_1_initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(ComGoogleI18nPhonenumbersPhoneNumberUtil *outer$, id<JavaLangCharSequence> capture$0, NSString *capture$1, ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *capture$2, jlong capture$3);

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersPhoneNumberUtil)

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PUNCTUATION = @"-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \u00a0\u00ad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e";
NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS = @"+\uff0b";
JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS_PATTERN;
JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_SECOND_NUMBER_START_PATTERN;
JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_UNWANTED_END_CHAR_PATTERN;
NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERNS_FOR_MATCHING;
JavaUtilRegexPattern *ComGoogleI18nPhonenumbersPhoneNumberUtil_NON_DIGITS_PATTERN;
NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_REGION_CODE_FOR_NON_GEO_ENTITY = @"001";

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil

- (instancetype)initWithComGoogleI18nPhonenumbersMetadataSource:(id<ComGoogleI18nPhonenumbersMetadataSource>)metadataSource
                                                withJavaUtilMap:(id<JavaUtilMap>)countryCallingCodeToRegionCodeMap {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initWithComGoogleI18nPhonenumbersMetadataSource_withJavaUtilMap_(self, metadataSource, countryCallingCodeToRegionCodeMap);
  return self;
}

+ (id<JavaLangCharSequence>)extractPossibleNumberWithJavaLangCharSequence:(id<JavaLangCharSequence>)number {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_extractPossibleNumberWithJavaLangCharSequence_(number);
}

+ (jboolean)isViablePhoneNumberWithJavaLangCharSequence:(id<JavaLangCharSequence>)number {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_isViablePhoneNumberWithJavaLangCharSequence_(number);
}

+ (JavaLangStringBuilder *)normalizeWithJavaLangStringBuilder:(JavaLangStringBuilder *)number {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeWithJavaLangStringBuilder_(number);
}

+ (NSString *)normalizeDigitsOnlyWithJavaLangCharSequence:(id<JavaLangCharSequence>)number {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsOnlyWithJavaLangCharSequence_(number);
}

+ (JavaLangStringBuilder *)normalizeDigitsWithJavaLangCharSequence:(id<JavaLangCharSequence>)number
                                                       withBoolean:(jboolean)keepNonDigits {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsWithJavaLangCharSequence_withBoolean_(number, keepNonDigits);
}

+ (NSString *)normalizeDiallableCharsOnlyWithJavaLangCharSequence:(id<JavaLangCharSequence>)number {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDiallableCharsOnlyWithJavaLangCharSequence_(number);
}

+ (NSString *)convertAlphaCharactersInNumberWithJavaLangCharSequence:(id<JavaLangCharSequence>)number {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_convertAlphaCharactersInNumberWithJavaLangCharSequence_(number);
}

- (jint)getLengthOfGeographicalAreaCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForRegionWithNSString:[self getRegionCodeForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number]];
  if (metadata == nil) {
    return 0;
  }
  if (![metadata hasNationalPrefix] && ![((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) isItalianLeadingZero]) {
    return 0;
  }
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *type = [self getNumberTypeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  jint countryCallingCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  if (type == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE) && [((id<JavaUtilSet>) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_GEO_MOBILE_COUNTRIES_WITHOUT_MOBILE_AREA_CODES)) containsWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)]) {
    return 0;
  }
  if (![self isNumberGeographicalWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:type withInt:countryCallingCode]) {
    return 0;
  }
  return [self getLengthOfNationalDestinationCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
}

- (jint)getLengthOfNationalDestinationCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *copiedProto;
  if ([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) hasExtension]) {
    copiedProto = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
    [copiedProto mergeFromWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
    [copiedProto clearExtension];
  }
  else {
    copiedProto = number;
  }
  NSString *nationalSignificantNumber = [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:copiedProto withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL)];
  IOSObjectArray *numberGroups = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_NON_DIGITS_PATTERN)) splitWithJavaLangCharSequence:nationalSignificantNumber];
  if (((IOSObjectArray *) nil_chk(numberGroups))->size_ <= 3) {
    return 0;
  }
  if ([self getNumberTypeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number] == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE)) {
    NSString *mobileToken = ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryMobileTokenWithInt_([number getCountryCode]);
    if (![((NSString *) nil_chk(mobileToken)) isEqual:@""]) {
      return [((NSString *) nil_chk(IOSObjectArray_Get(numberGroups, 2))) java_length] + [((NSString *) nil_chk(IOSObjectArray_Get(numberGroups, 3))) java_length];
    }
  }
  return [((NSString *) nil_chk(IOSObjectArray_Get(numberGroups, 2))) java_length];
}

+ (NSString *)getCountryMobileTokenWithInt:(jint)countryCallingCode {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryMobileTokenWithInt_(countryCallingCode);
}

+ (void)setInstanceWithComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_setInstanceWithComGoogleI18nPhonenumbersPhoneNumberUtil_(util);
}

- (id<JavaUtilSet>)getSupportedRegions {
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(supportedRegions_);
}

- (id<JavaUtilSet>)getSupportedGlobalNetworkCallingCodes {
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(countryCodesForNonGeographicalRegion_);
}

- (id<JavaUtilSet>)getSupportedCallingCodes {
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((id<JavaUtilMap>) nil_chk(countryCallingCodeToRegionCodeMap_)) keySet]);
}

- (id<JavaUtilSet>)getSupportedTypesForRegionWithNSString:(NSString *)regionCode {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, regionCode)) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$", @"Invalid or unknown region code provided: ", regionCode)];
    return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(create_JavaUtilTreeSet_init());
  }
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForRegionWithNSString:regionCode];
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_getSupportedTypesForMetadataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, metadata);
}

- (id<JavaUtilSet>)getSupportedTypesForNonGeoEntityWithInt:(jint)countryCallingCode {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForNonGeographicalRegionWithInt:countryCallingCode];
  if (metadata == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$I", @"Unknown country calling code for a non-geographical entity provided: ", countryCallingCode)];
    return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(create_JavaUtilTreeSet_init());
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_getSupportedTypesForMetadataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, metadata);
}

+ (ComGoogleI18nPhonenumbersPhoneNumberUtil *)getInstance {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_getInstance();
}

+ (ComGoogleI18nPhonenumbersPhoneNumberUtil *)createInstanceWithComGoogleI18nPhonenumbersMetadataLoader:(id<ComGoogleI18nPhonenumbersMetadataLoader>)metadataLoader {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_createInstanceWithComGoogleI18nPhonenumbersMetadataLoader_(metadataLoader);
}

+ (jboolean)formattingRuleHasFirstGroupOnlyWithNSString:(NSString *)nationalPrefixFormattingRule {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_formattingRuleHasFirstGroupOnlyWithNSString_(nationalPrefixFormattingRule);
}

- (jboolean)isNumberGeographicalWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)phoneNumber {
  return [self isNumberGeographicalWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:[self getNumberTypeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:phoneNumber] withInt:[((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) getCountryCode]];
}

- (jboolean)isNumberGeographicalWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)phoneNumberType
                                                                                     withInt:(jint)countryCallingCode {
  return phoneNumberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE) || phoneNumberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE_OR_MOBILE) || ([((id<JavaUtilSet>) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_GEO_MOBILE_COUNTRIES)) containsWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)] && phoneNumberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE));
}

- (NSString *)formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
          withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *)numberFormat {
  if ([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getNationalNumber] == 0 && [number hasRawInput]) {
    NSString *rawInput = [number getRawInput];
    if ([((NSString *) nil_chk(rawInput)) java_length] > 0) {
      return rawInput;
    }
  }
  JavaLangStringBuilder *formattedNumber = create_JavaLangStringBuilder_initWithInt_(20);
  [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:numberFormat withJavaLangStringBuilder:formattedNumber];
  return [formattedNumber description];
}

- (void)formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
    withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *)numberFormat
                                         withJavaLangStringBuilder:(JavaLangStringBuilder *)formattedNumber {
  [((JavaLangStringBuilder *) nil_chk(formattedNumber)) setLengthWithInt:0];
  jint countryCallingCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  NSString *nationalSignificantNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  if (numberFormat == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, E164)) {
    [formattedNumber appendWithNSString:nationalSignificantNumber];
    ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, countryCallingCode, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, E164), formattedNumber);
    return;
  }
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(self, countryCallingCode)) {
    [formattedNumber appendWithNSString:nationalSignificantNumber];
    return;
  }
  NSString *regionCode = [self getRegionCodeForCountryCodeWithInt:countryCallingCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCallingCode, regionCode);
  [formattedNumber appendWithNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_(self, nationalSignificantNumber, metadata, numberFormat)];
  ComGoogleI18nPhonenumbersPhoneNumberUtil_maybeAppendFormattedExtensionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, number, metadata, numberFormat, formattedNumber);
  ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, countryCallingCode, numberFormat, formattedNumber);
}

- (NSString *)formatByPatternWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                   withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *)numberFormat
                                                                 withJavaUtilList:(id<JavaUtilList>)userDefinedFormats {
  jint countryCallingCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  NSString *nationalSignificantNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(self, countryCallingCode)) {
    return nationalSignificantNumber;
  }
  NSString *regionCode = [self getRegionCodeForCountryCodeWithInt:countryCallingCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCallingCode, regionCode);
  JavaLangStringBuilder *formattedNumber = create_JavaLangStringBuilder_initWithInt_(20);
  ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *formattingPattern = [self chooseFormattingPatternForNumberWithJavaUtilList:userDefinedFormats withNSString:nationalSignificantNumber];
  if (formattingPattern == nil) {
    [formattedNumber appendWithNSString:nationalSignificantNumber];
  }
  else {
    ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_Builder *numFormatCopy = ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_newBuilder();
    [((ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_Builder *) nil_chk(numFormatCopy)) mergeFromWithComGoogleI18nPhonenumbersPhonemetadata_NumberFormat:formattingPattern];
    NSString *nationalPrefixFormattingRule = [formattingPattern getNationalPrefixFormattingRule];
    if ([((NSString *) nil_chk(nationalPrefixFormattingRule)) java_length] > 0) {
      NSString *nationalPrefix = [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getNationalPrefix];
      if ([((NSString *) nil_chk(nationalPrefix)) java_length] > 0) {
        nationalPrefixFormattingRule = [nationalPrefixFormattingRule java_replace:ComGoogleI18nPhonenumbersPhoneNumberUtil_NP_STRING withSequence:nationalPrefix];
        nationalPrefixFormattingRule = [((NSString *) nil_chk(nationalPrefixFormattingRule)) java_replace:ComGoogleI18nPhonenumbersPhoneNumberUtil_FG_STRING withSequence:@"$1"];
        [numFormatCopy setNationalPrefixFormattingRuleWithNSString:nationalPrefixFormattingRule];
      }
      else {
        [numFormatCopy clearNationalPrefixFormattingRule];
      }
    }
    [formattedNumber appendWithNSString:[self formatNsnUsingPatternWithNSString:nationalSignificantNumber withComGoogleI18nPhonenumbersPhonemetadata_NumberFormat:numFormatCopy withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:numberFormat]];
  }
  ComGoogleI18nPhonenumbersPhoneNumberUtil_maybeAppendFormattedExtensionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, number, metadata, numberFormat, formattedNumber);
  ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, countryCallingCode, numberFormat, formattedNumber);
  return [formattedNumber description];
}

- (NSString *)formatNationalNumberWithCarrierCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                             withJavaLangCharSequence:(id<JavaLangCharSequence>)carrierCode {
  jint countryCallingCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  NSString *nationalSignificantNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(self, countryCallingCode)) {
    return nationalSignificantNumber;
  }
  NSString *regionCode = [self getRegionCodeForCountryCodeWithInt:countryCallingCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCallingCode, regionCode);
  JavaLangStringBuilder *formattedNumber = create_JavaLangStringBuilder_initWithInt_(20);
  [formattedNumber appendWithNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(self, nationalSignificantNumber, metadata, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL), carrierCode)];
  ComGoogleI18nPhonenumbersPhoneNumberUtil_maybeAppendFormattedExtensionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, number, metadata, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL), formattedNumber);
  ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, countryCallingCode, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL), formattedNumber);
  return [formattedNumber description];
}

- (NSString *)formatNationalNumberWithPreferredCarrierCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                      withJavaLangCharSequence:(id<JavaLangCharSequence>)fallbackCarrierCode {
  return [self formatNationalNumberWithCarrierCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withJavaLangCharSequence:[((NSString *) nil_chk([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getPreferredDomesticCarrierCode])) java_length] > 0 ? [number getPreferredDomesticCarrierCode] : (id) fallbackCarrierCode];
}

- (NSString *)formatNumberForMobileDialingWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                  withNSString:(NSString *)regionCallingFrom
                                                                                   withBoolean:(jboolean)withFormatting {
  jint countryCallingCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(self, countryCallingCode)) {
    return [number hasRawInput] ? [number getRawInput] : @"";
  }
  NSString *formattedNumber = @"";
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *numberNoExt = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk([create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init() mergeFromWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number])) clearExtension];
  NSString *regionCode = [self getRegionCodeForCountryCodeWithInt:countryCallingCode];
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *numberType = [self getNumberTypeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt];
  jboolean isValidNumber = (numberType != JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN));
  if ([((NSString *) nil_chk(regionCallingFrom)) isEqual:regionCode]) {
    jboolean isFixedLineOrMobile = (numberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE)) || (numberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE)) || (numberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE_OR_MOBILE));
    if ([((NSString *) nil_chk(regionCode)) isEqual:@"CO"] && numberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE)) {
      formattedNumber = [self formatNationalNumberWithCarrierCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withJavaLangCharSequence:ComGoogleI18nPhonenumbersPhoneNumberUtil_COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX];
    }
    else if ([regionCode isEqual:@"BR"] && isFixedLineOrMobile) {
      formattedNumber = [((NSString *) nil_chk([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(numberNoExt)) getPreferredDomesticCarrierCode])) java_length] > 0 ? formattedNumber = [self formatNationalNumberWithPreferredCarrierCodeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withJavaLangCharSequence:@""] : @"";
    }
    else if (isValidNumber && [regionCode isEqual:@"HU"]) {
      formattedNumber = JreStrcat("$C$", [self getNddPrefixForRegionWithNSString:regionCode withBoolean:true], ' ', [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)]);
    }
    else if (countryCallingCode == ComGoogleI18nPhonenumbersPhoneNumberUtil_NANPA_COUNTRY_CODE) {
      ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *regionMetadata = [self getMetadataForRegionWithNSString:regionCallingFrom];
      if ([self canBeInternationallyDialledWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt] && ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt], regionMetadata) != JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, TOO_SHORT)) {
        formattedNumber = [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL)];
      }
      else {
        formattedNumber = [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)];
      }
    }
    else {
      if (([regionCode isEqual:ComGoogleI18nPhonenumbersPhoneNumberUtil_REGION_CODE_FOR_NON_GEO_ENTITY] || (([regionCode isEqual:@"MX"] || [regionCode isEqual:@"CL"]) && isFixedLineOrMobile)) && [self canBeInternationallyDialledWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt]) {
        formattedNumber = [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL)];
      }
      else {
        formattedNumber = [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)];
      }
    }
  }
  else if (isValidNumber && [self canBeInternationallyDialledWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt]) {
    return withFormatting ? [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL)] : [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberNoExt withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, E164)];
  }
  return withFormatting ? formattedNumber : ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDiallableCharsOnlyWithJavaLangCharSequence_(formattedNumber);
}

- (NSString *)formatOutOfCountryCallingNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                     withNSString:(NSString *)regionCallingFrom {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, regionCallingFrom)) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$$", @"Trying to format number from invalid region ", regionCallingFrom, @". International formatting applied.")];
    return [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL)];
  }
  jint countryCallingCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  NSString *nationalSignificantNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(self, countryCallingCode)) {
    return nationalSignificantNumber;
  }
  if (countryCallingCode == ComGoogleI18nPhonenumbersPhoneNumberUtil_NANPA_COUNTRY_CODE) {
    if ([self isNANPACountryWithNSString:regionCallingFrom]) {
      return JreStrcat("IC$", countryCallingCode, ' ', [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)]);
    }
  }
  else if (countryCallingCode == ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryCodeForValidRegionWithNSString_(self, regionCallingFrom)) {
    return [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)];
  }
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadataForRegionCallingFrom = [self getMetadataForRegionWithNSString:regionCallingFrom];
  NSString *internationalPrefix = [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadataForRegionCallingFrom)) getInternationalPrefix];
  NSString *internationalPrefixForFormatting = @"";
  if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_SINGLE_INTERNATIONAL_PREFIX)) matcherWithJavaLangCharSequence:internationalPrefix])) matches]) {
    internationalPrefixForFormatting = internationalPrefix;
  }
  else if ([metadataForRegionCallingFrom hasPreferredInternationalPrefix]) {
    internationalPrefixForFormatting = [metadataForRegionCallingFrom getPreferredInternationalPrefix];
  }
  NSString *regionCode = [self getRegionCodeForCountryCodeWithInt:countryCallingCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadataForRegion = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCallingCode, regionCode);
  NSString *formattedNationalNumber = ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_(self, nationalSignificantNumber, metadataForRegion, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL));
  JavaLangStringBuilder *formattedNumber = create_JavaLangStringBuilder_initWithNSString_(formattedNationalNumber);
  ComGoogleI18nPhonenumbersPhoneNumberUtil_maybeAppendFormattedExtensionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, number, metadataForRegion, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL), formattedNumber);
  if ([((NSString *) nil_chk(internationalPrefixForFormatting)) java_length] > 0) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([formattedNumber insertWithInt:0 withNSString:@" "])) insertWithInt:0 withInt:countryCallingCode])) insertWithInt:0 withNSString:@" "])) insertWithInt:0 withNSString:internationalPrefixForFormatting];
  }
  else {
    ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, countryCallingCode, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL), formattedNumber);
  }
  return [formattedNumber description];
}

- (NSString *)formatInOriginalFormatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                            withNSString:(NSString *)regionCallingFrom {
  if ([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) hasRawInput] && !ComGoogleI18nPhonenumbersPhoneNumberUtil_hasFormattingPatternForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, number)) {
    return [number getRawInput];
  }
  if (![number hasCountryCodeSource]) {
    return [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)];
  }
  NSString *formattedNumber;
  {
    NSString *regionCode;
    NSString *nationalPrefix;
    NSString *nationalFormat;
    ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata;
    NSString *nationalNumber;
    ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *formatRule;
    NSString *candidateNationalPrefixRule;
    jint indexOfFirstGroup;
    ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_Builder *numFormatCopy;
    id<JavaUtilList> numberFormats;
    switch ([[number getCountryCodeSource] ordinal]) {
      case ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource_Enum_FROM_NUMBER_WITH_PLUS_SIGN:
      formattedNumber = [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL)];
      break;
      case ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource_Enum_FROM_NUMBER_WITH_IDD:
      formattedNumber = [self formatOutOfCountryCallingNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withNSString:regionCallingFrom];
      break;
      case ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource_Enum_FROM_NUMBER_WITHOUT_PLUS_SIGN:
      formattedNumber = [((NSString *) nil_chk([self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL)])) java_substring:1];
      break;
      case ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource_Enum_FROM_DEFAULT_COUNTRY:
      default:
      regionCode = [self getRegionCodeForCountryCodeWithInt:[number getCountryCode]];
      nationalPrefix = [self getNddPrefixForRegionWithNSString:regionCode withBoolean:true];
      nationalFormat = [self formatWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)];
      if (nationalPrefix == nil || [nationalPrefix java_length] == 0) {
        formattedNumber = nationalFormat;
        break;
      }
      if (ComGoogleI18nPhonenumbersPhoneNumberUtil_rawInputContainsNationalPrefixWithNSString_withNSString_withNSString_(self, [number getRawInput], nationalPrefix, regionCode)) {
        formattedNumber = nationalFormat;
        break;
      }
      metadata = [self getMetadataForRegionWithNSString:regionCode];
      nationalNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
      formatRule = [self chooseFormattingPatternForNumberWithJavaUtilList:[((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) numberFormats] withNSString:nationalNumber];
      if (formatRule == nil) {
        formattedNumber = nationalFormat;
        break;
      }
      candidateNationalPrefixRule = [formatRule getNationalPrefixFormattingRule];
      indexOfFirstGroup = [((NSString *) nil_chk(candidateNationalPrefixRule)) java_indexOfString:@"$1"];
      if (indexOfFirstGroup <= 0) {
        formattedNumber = nationalFormat;
        break;
      }
      candidateNationalPrefixRule = [candidateNationalPrefixRule java_substring:0 endIndex:indexOfFirstGroup];
      candidateNationalPrefixRule = ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsOnlyWithJavaLangCharSequence_(candidateNationalPrefixRule);
      if ([((NSString *) nil_chk(candidateNationalPrefixRule)) java_length] == 0) {
        formattedNumber = nationalFormat;
        break;
      }
      numFormatCopy = ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_newBuilder();
      [((ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_Builder *) nil_chk(numFormatCopy)) mergeFromWithComGoogleI18nPhonenumbersPhonemetadata_NumberFormat:formatRule];
      [numFormatCopy clearNationalPrefixFormattingRule];
      numberFormats = create_JavaUtilArrayList_initWithInt_(1);
      [numberFormats addWithId:numFormatCopy];
      formattedNumber = [self formatByPatternWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL) withJavaUtilList:numberFormats];
      break;
    }
  }
  NSString *rawInput = [number getRawInput];
  if (formattedNumber != nil && [((NSString *) nil_chk(rawInput)) java_length] > 0) {
    NSString *normalizedFormattedNumber = ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDiallableCharsOnlyWithJavaLangCharSequence_(formattedNumber);
    NSString *normalizedRawInput = ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDiallableCharsOnlyWithJavaLangCharSequence_(rawInput);
    if (![((NSString *) nil_chk(normalizedFormattedNumber)) isEqual:normalizedRawInput]) {
      formattedNumber = rawInput;
    }
  }
  return formattedNumber;
}

- (NSString *)formatOutOfCountryKeepingAlphaCharsWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                         withNSString:(NSString *)regionCallingFrom {
  NSString *rawInput = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getRawInput];
  if ([((NSString *) nil_chk(rawInput)) java_length] == 0) {
    return [self formatOutOfCountryCallingNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withNSString:regionCallingFrom];
  }
  jint countryCode = [number getCountryCode];
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(self, countryCode)) {
    return rawInput;
  }
  rawInput = ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeHelperWithJavaLangCharSequence_withJavaUtilMap_withBoolean_(rawInput, ComGoogleI18nPhonenumbersPhoneNumberUtil_ALL_PLUS_NUMBER_GROUPING_SYMBOLS, true);
  NSString *nationalNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  if ([((NSString *) nil_chk(nationalNumber)) java_length] > 3) {
    jint firstNationalNumberDigit = [((NSString *) nil_chk(rawInput)) java_indexOfString:[nationalNumber java_substring:0 endIndex:3]];
    if (firstNationalNumberDigit != -1) {
      rawInput = [rawInput java_substring:firstNationalNumberDigit];
    }
  }
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadataForRegionCallingFrom = [self getMetadataForRegionWithNSString:regionCallingFrom];
  if (countryCode == ComGoogleI18nPhonenumbersPhoneNumberUtil_NANPA_COUNTRY_CODE) {
    if ([self isNANPACountryWithNSString:regionCallingFrom]) {
      return JreStrcat("IC$", countryCode, ' ', rawInput);
    }
  }
  else if (metadataForRegionCallingFrom != nil && countryCode == ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryCodeForValidRegionWithNSString_(self, regionCallingFrom)) {
    ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *formattingPattern = [self chooseFormattingPatternForNumberWithJavaUtilList:[metadataForRegionCallingFrom numberFormats] withNSString:nationalNumber];
    if (formattingPattern == nil) {
      return rawInput;
    }
    ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_Builder *newFormat = ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_newBuilder();
    [((ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_Builder *) nil_chk(newFormat)) mergeFromWithComGoogleI18nPhonenumbersPhonemetadata_NumberFormat:formattingPattern];
    [newFormat setPatternWithNSString:@"(\\d+)(.*)"];
    [newFormat setFormatWithNSString:@"$1$2"];
    return [self formatNsnUsingPatternWithNSString:rawInput withComGoogleI18nPhonenumbersPhonemetadata_NumberFormat:newFormat withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)];
  }
  NSString *internationalPrefixForFormatting = @"";
  if (metadataForRegionCallingFrom != nil) {
    NSString *internationalPrefix = [metadataForRegionCallingFrom getInternationalPrefix];
    internationalPrefixForFormatting = [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_SINGLE_INTERNATIONAL_PREFIX)) matcherWithJavaLangCharSequence:internationalPrefix])) matches] ? internationalPrefix : [metadataForRegionCallingFrom getPreferredInternationalPrefix];
  }
  JavaLangStringBuilder *formattedNumber = create_JavaLangStringBuilder_initWithNSString_(rawInput);
  NSString *regionCode = [self getRegionCodeForCountryCodeWithInt:countryCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadataForRegion = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCode, regionCode);
  ComGoogleI18nPhonenumbersPhoneNumberUtil_maybeAppendFormattedExtensionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, number, metadataForRegion, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL), formattedNumber);
  if ([internationalPrefixForFormatting java_length] > 0) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([formattedNumber insertWithInt:0 withNSString:@" "])) insertWithInt:0 withInt:countryCode])) insertWithInt:0 withNSString:@" "])) insertWithInt:0 withNSString:internationalPrefixForFormatting];
  }
  else {
    if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, regionCallingFrom)) {
      [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$$", @"Trying to format number from invalid region ", regionCallingFrom, @". International formatting applied.")];
    }
    ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(self, countryCode, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, INTERNATIONAL), formattedNumber);
  }
  return [formattedNumber description];
}

- (NSString *)getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  JavaLangStringBuilder *nationalNumber = create_JavaLangStringBuilder_init();
  if ([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) isItalianLeadingZero] && [number getNumberOfLeadingZeros] > 0) {
    IOSCharArray *zeros = [IOSCharArray arrayWithLength:[number getNumberOfLeadingZeros]];
    JavaUtilArrays_fillWithCharArray_withChar_(zeros, '0');
    [nationalNumber appendWithNSString:[NSString java_stringWithCharacters:zeros]];
  }
  [nationalNumber appendWithLong:[number getNationalNumber]];
  return [nationalNumber description];
}

- (ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *)chooseFormattingPatternForNumberWithJavaUtilList:(id<JavaUtilList>)availableFormats
                                                                                             withNSString:(NSString *)nationalNumber {
  for (ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat * __strong numFormat in nil_chk(availableFormats)) {
    jint size = [((ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *) nil_chk(numFormat)) leadingDigitsPatternSize];
    if (size == 0 || [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk([((ComGoogleI18nPhonenumbersInternalRegexCache *) nil_chk(regexCache_)) getPatternForRegexWithNSString:[numFormat getLeadingDigitsPatternWithInt:size - 1]])) matcherWithJavaLangCharSequence:nationalNumber])) lookingAt]) {
      JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk([((ComGoogleI18nPhonenumbersInternalRegexCache *) nil_chk(regexCache_)) getPatternForRegexWithNSString:[numFormat getPattern]])) matcherWithJavaLangCharSequence:nationalNumber];
      if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
        return numFormat;
      }
    }
  }
  return nil;
}

- (NSString *)formatNsnUsingPatternWithNSString:(NSString *)nationalNumber
withComGoogleI18nPhonenumbersPhonemetadata_NumberFormat:(ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *)formattingPattern
withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *)numberFormat {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnUsingPatternWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(self, nationalNumber, formattingPattern, numberFormat, nil);
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)getExampleNumberWithNSString:(NSString *)regionCode {
  return [self getExampleNumberForTypeWithNSString:regionCode withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE)];
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)getInvalidExampleNumberWithNSString:(NSString *)regionCode {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, regionCode)) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$", @"Invalid or unknown region code provided: ", regionCode)];
    return nil;
  }
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *desc = [self getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:[self getMetadataForRegionWithNSString:regionCode] withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE)];
  if (![((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(desc)) hasExampleNumber]) {
    return nil;
  }
  NSString *exampleNumber = [desc getExampleNumber];
  for (jint phoneNumberLength = [((NSString *) nil_chk(exampleNumber)) java_length] - 1; phoneNumberLength >= ComGoogleI18nPhonenumbersPhoneNumberUtil_MIN_LENGTH_FOR_NSN; phoneNumberLength--) {
    NSString *numberToTry = [exampleNumber java_substring:0 endIndex:phoneNumberLength];
    @try {
      ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *possiblyValidNumber = [self parseWithJavaLangCharSequence:numberToTry withNSString:regionCode];
      if (![self isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:possiblyValidNumber]) {
        return possiblyValidNumber;
      }
    }
    @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
    }
  }
  return nil;
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)getExampleNumberForTypeWithNSString:(NSString *)regionCode
                             withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)type {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, regionCode)) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$", @"Invalid or unknown region code provided: ", regionCode)];
    return nil;
  }
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *desc = [self getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:[self getMetadataForRegionWithNSString:regionCode] withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:type];
  @try {
    if ([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(desc)) hasExampleNumber]) {
      return [self parseWithJavaLangCharSequence:[desc getExampleNumber] withNSString:regionCode];
    }
  }
  @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:[e description]];
  }
  return nil;
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)getExampleNumberForTypeWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)type {
  for (NSString * __strong regionCode in nil_chk([self getSupportedRegions])) {
    ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *exampleNumber = [self getExampleNumberForTypeWithNSString:regionCode withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:type];
    if (exampleNumber != nil) {
      return exampleNumber;
    }
  }
  for (JavaLangInteger *boxed__ in nil_chk([self getSupportedGlobalNetworkCallingCodes])) {
    jint countryCallingCode = [((JavaLangInteger *) nil_chk(boxed__)) intValue];
    ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *desc = [self getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:[self getMetadataForNonGeographicalRegionWithInt:countryCallingCode] withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:type];
    @try {
      if ([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(desc)) hasExampleNumber]) {
        return [self parseWithJavaLangCharSequence:JreStrcat("CI$", '+', countryCallingCode, [desc getExampleNumber]) withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION];
      }
    }
    @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
      [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:[e description]];
    }
  }
  return nil;
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)getExampleNumberForNonGeoEntityWithInt:(jint)countryCallingCode {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForNonGeographicalRegionWithInt:countryCallingCode];
  if (metadata != nil) {
    for (ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc * __strong desc in nil_chk(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ [metadata getMobile], [metadata getTollFree], [metadata getSharedCost], [metadata getVoip], [metadata getVoicemail], [metadata getUan], [metadata getPremiumRate] } count:7 type:ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_class_()]))) {
      @try {
        if (desc != nil && [desc hasExampleNumber]) {
          return [self parseWithJavaLangCharSequence:JreStrcat("CI$", '+', countryCallingCode, [desc getExampleNumber]) withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION];
        }
      }
      @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, SEVERE) withNSString:[e description]];
      }
    }
  }
  else {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$I", @"Invalid or unknown country calling code provided: ", countryCallingCode)];
  }
  return nil;
}

- (ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *)getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:(ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *)metadata
                                                                           withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)type {
  switch ([type ordinal]) {
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_PREMIUM_RATE:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getPremiumRate];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_TOLL_FREE:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getTollFree];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_MOBILE:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getMobile];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_FIXED_LINE:
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_FIXED_LINE_OR_MOBILE:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getFixedLine];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_SHARED_COST:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getSharedCost];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_VOIP:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getVoip];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_PERSONAL_NUMBER:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getPersonalNumber];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_PAGER:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getPager];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_UAN:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getUan];
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum_VOICEMAIL:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getVoicemail];
    default:
    return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getGeneralDesc];
  }
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)getNumberTypeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  NSString *regionCode = [self getRegionCodeForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode], regionCode);
  if (metadata == nil) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN);
  }
  NSString *nationalSignificantNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_getNumberTypeHelperWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, nationalSignificantNumber, metadata);
}

- (ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *)getMetadataForRegionWithNSString:(NSString *)regionCode {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, regionCode)) {
    return nil;
  }
  return [((id<ComGoogleI18nPhonenumbersMetadataSource>) nil_chk(metadataSource_)) getMetadataForRegionWithNSString:regionCode];
}

- (ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *)getMetadataForNonGeographicalRegionWithInt:(jint)countryCallingCode {
  if (![((id<JavaUtilMap>) nil_chk(countryCallingCodeToRegionCodeMap_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)]) {
    return nil;
  }
  return [((id<ComGoogleI18nPhonenumbersMetadataSource>) nil_chk(metadataSource_)) getMetadataForNonGeographicalRegionWithInt:countryCallingCode];
}

- (jboolean)isNumberMatchingDescWithNSString:(NSString *)nationalNumber
withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:(ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *)numberDesc {
  jint actualLength = [((NSString *) nil_chk(nationalNumber)) java_length];
  id<JavaUtilList> possibleLengths = [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(numberDesc)) getPossibleLengthList];
  if ([((id<JavaUtilList>) nil_chk(possibleLengths)) size] > 0 && ![possibleLengths containsWithId:JavaLangInteger_valueOfWithInt_(actualLength)]) {
    return false;
  }
  return [((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(matcherApi_)) matchNationalNumberWithJavaLangCharSequence:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:numberDesc withBoolean:false];
}

- (jboolean)isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  NSString *regionCode = [self getRegionCodeForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  return [self isValidNumberForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withNSString:regionCode];
}

- (jboolean)isValidNumberForRegionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                          withNSString:(NSString *)regionCode {
  jint countryCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCode, regionCode);
  if ((metadata == nil) || (![((NSString *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_REGION_CODE_FOR_NON_GEO_ENTITY)) isEqual:regionCode] && countryCode != ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryCodeForValidRegionWithNSString_(self, regionCode))) {
    return false;
  }
  NSString *nationalSignificantNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_getNumberTypeHelperWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, nationalSignificantNumber, metadata) != JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN);
}

- (NSString *)getRegionCodeForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  jint countryCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  id<JavaUtilList> regions = [((id<JavaUtilMap>) nil_chk(countryCallingCodeToRegionCodeMap_)) getWithId:JavaLangInteger_valueOfWithInt_(countryCode)];
  if (regions == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:JreStrcat("$IC", @"Missing/invalid country_code (", countryCode, ')')];
    return nil;
  }
  if ([regions size] == 1) {
    return [regions getWithInt:0];
  }
  else {
    return ComGoogleI18nPhonenumbersPhoneNumberUtil_getRegionCodeForNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(self, number, regions);
  }
}

- (NSString *)getRegionCodeForCountryCodeWithInt:(jint)countryCallingCode {
  id<JavaUtilList> regionCodes = [((id<JavaUtilMap>) nil_chk(countryCallingCodeToRegionCodeMap_)) getWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)];
  return regionCodes == nil ? ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION : [regionCodes getWithInt:0];
}

- (id<JavaUtilList>)getRegionCodesForCountryCodeWithInt:(jint)countryCallingCode {
  id<JavaUtilList> regionCodes = [((id<JavaUtilMap>) nil_chk(countryCallingCodeToRegionCodeMap_)) getWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)];
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(regionCodes == nil ? create_JavaUtilArrayList_initWithInt_(0) : regionCodes);
}

- (jint)getCountryCodeForRegionWithNSString:(NSString *)regionCode {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, regionCode)) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$$", @"Invalid or missing region code (", ((regionCode == nil) ? @"null" : regionCode), @") provided.")];
    return 0;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryCodeForValidRegionWithNSString_(self, regionCode);
}

- (NSString *)getNddPrefixForRegionWithNSString:(NSString *)regionCode
                                    withBoolean:(jboolean)stripNonDigits {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForRegionWithNSString:regionCode];
  if (metadata == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$$", @"Invalid or missing region code (", ((regionCode == nil) ? @"null" : regionCode), @") provided.")];
    return nil;
  }
  NSString *nationalPrefix = [metadata getNationalPrefix];
  if ([((NSString *) nil_chk(nationalPrefix)) java_length] == 0) {
    return nil;
  }
  if (stripNonDigits) {
    nationalPrefix = [nationalPrefix java_replace:@"~" withSequence:@""];
  }
  return nationalPrefix;
}

- (jboolean)isNANPACountryWithNSString:(NSString *)regionCode {
  return [((id<JavaUtilSet>) nil_chk(nanpaRegions_)) containsWithId:regionCode];
}

- (jboolean)isAlphaNumberWithJavaLangCharSequence:(id<JavaLangCharSequence>)number {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isViablePhoneNumberWithJavaLangCharSequence_(number)) {
    return false;
  }
  JavaLangStringBuilder *strippedNumber = create_JavaLangStringBuilder_initWithJavaLangCharSequence_(number);
  [self maybeStripExtensionWithJavaLangStringBuilder:strippedNumber];
  return [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_ALPHA_PHONE_PATTERN)) matcherWithJavaLangCharSequence:strippedNumber])) matches];
}

- (jboolean)isPossibleNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *result = [self isPossibleNumberWithReasonWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  return result == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE) || result == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE_LOCAL_ONLY);
}

- (jboolean)isPossibleNumberForTypeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                           withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)type {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *result = [self isPossibleNumberForTypeWithReasonWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:type];
  return result == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE) || result == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE_LOCAL_ONLY);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *)isPossibleNumberWithReasonWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  return [self isPossibleNumberForTypeWithReasonWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN)];
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *)isPossibleNumberForTypeWithReasonWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                                        withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)type {
  NSString *nationalNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  jint countryCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(self, countryCode)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, INVALID_COUNTRY_CODE);
  }
  NSString *regionCode = [self getRegionCodeForCountryCodeWithInt:countryCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCode, regionCode);
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(self, nationalNumber, metadata, type);
}

- (jboolean)isPossibleNumberWithJavaLangCharSequence:(id<JavaLangCharSequence>)number
                                        withNSString:(NSString *)regionDialingFrom {
  @try {
    return [self isPossibleNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:[self parseWithJavaLangCharSequence:number withNSString:regionDialingFrom]];
  }
  @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
    return false;
  }
}

- (jboolean)truncateTooLongNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  if ([self isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number]) {
    return true;
  }
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *numberCopy = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
  [numberCopy mergeFromWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  jlong nationalNumber = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getNationalNumber];
  do {
    nationalNumber /= 10;
    [numberCopy setNationalNumberWithLong:nationalNumber];
    if ([self isPossibleNumberWithReasonWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberCopy] == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, TOO_SHORT) || nationalNumber == 0) {
      return false;
    }
  }
  while (![self isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:numberCopy]);
  [number setNationalNumberWithLong:nationalNumber];
  return true;
}

- (ComGoogleI18nPhonenumbersAsYouTypeFormatter *)getAsYouTypeFormatterWithNSString:(NSString *)regionCode {
  return create_ComGoogleI18nPhonenumbersAsYouTypeFormatter_initWithNSString_(regionCode);
}

- (jint)extractCountryCodeWithJavaLangStringBuilder:(JavaLangStringBuilder *)fullNumber
                          withJavaLangStringBuilder:(JavaLangStringBuilder *)nationalNumber {
  if (([((JavaLangStringBuilder *) nil_chk(fullNumber)) java_length] == 0) || ([fullNumber charAtWithInt:0] == '0')) {
    return 0;
  }
  jint potentialCountryCode;
  jint numberLength = [fullNumber java_length];
  for (jint i = 1; i <= ComGoogleI18nPhonenumbersPhoneNumberUtil_MAX_LENGTH_COUNTRY_CODE && i <= numberLength; i++) {
    potentialCountryCode = JavaLangInteger_parseIntWithNSString_([fullNumber substringWithInt:0 withInt:i]);
    if ([((id<JavaUtilMap>) nil_chk(countryCallingCodeToRegionCodeMap_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(potentialCountryCode)]) {
      [((JavaLangStringBuilder *) nil_chk(nationalNumber)) appendWithNSString:[fullNumber substringWithInt:i]];
      return potentialCountryCode;
    }
  }
  return 0;
}

- (jint)maybeExtractCountryCodeWithJavaLangCharSequence:(id<JavaLangCharSequence>)number
withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:(ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *)defaultRegionMetadata
                              withJavaLangStringBuilder:(JavaLangStringBuilder *)nationalNumber
                                            withBoolean:(jboolean)keepRawInput
   withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)phoneNumber {
  if ([((id<JavaLangCharSequence>) nil_chk(number)) java_length] == 0) {
    return 0;
  }
  JavaLangStringBuilder *fullNumber = create_JavaLangStringBuilder_initWithJavaLangCharSequence_(number);
  NSString *possibleCountryIddPrefix = @"NonMatch";
  if (defaultRegionMetadata != nil) {
    possibleCountryIddPrefix = [defaultRegionMetadata getInternationalPrefix];
  }
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource *countryCodeSource = [self maybeStripInternationalPrefixAndNormalizeWithJavaLangStringBuilder:fullNumber withNSString:possibleCountryIddPrefix];
  if (keepRawInput) {
    [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setCountryCodeSourceWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource:countryCodeSource];
  }
  if (countryCodeSource != JreLoadEnum(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource, FROM_DEFAULT_COUNTRY)) {
    if ([fullNumber java_length] <= ComGoogleI18nPhonenumbersPhoneNumberUtil_MIN_LENGTH_FOR_NSN) {
      @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_SHORT_AFTER_IDD), @"Phone number had an IDD, but after this was not long enough to be a viable phone number.");
    }
    jint potentialCountryCode = [self extractCountryCodeWithJavaLangStringBuilder:fullNumber withJavaLangStringBuilder:nationalNumber];
    if (potentialCountryCode != 0) {
      [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setCountryCodeWithInt:potentialCountryCode];
      return potentialCountryCode;
    }
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE), @"Country calling code supplied was not recognised.");
  }
  else if (defaultRegionMetadata != nil) {
    jint defaultCountryCode = [defaultRegionMetadata getCountryCode];
    NSString *defaultCountryCodeString = NSString_java_valueOfInt_(defaultCountryCode);
    NSString *normalizedNumber = [fullNumber description];
    if ([((NSString *) nil_chk(normalizedNumber)) java_hasPrefix:defaultCountryCodeString]) {
      JavaLangStringBuilder *potentialNationalNumber = create_JavaLangStringBuilder_initWithNSString_([normalizedNumber java_substring:[((NSString *) nil_chk(defaultCountryCodeString)) java_length]]);
      ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *generalDesc = [defaultRegionMetadata getGeneralDesc];
      [self maybeStripNationalPrefixAndCarrierCodeWithJavaLangStringBuilder:potentialNationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:defaultRegionMetadata withJavaLangStringBuilder:nil];
      if ((![((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(matcherApi_)) matchNationalNumberWithJavaLangCharSequence:fullNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:generalDesc withBoolean:false] && [matcherApi_ matchNationalNumberWithJavaLangCharSequence:potentialNationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:generalDesc withBoolean:false]) || ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, fullNumber, defaultRegionMetadata) == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, TOO_LONG)) {
        [((JavaLangStringBuilder *) nil_chk(nationalNumber)) appendWithJavaLangCharSequence:potentialNationalNumber];
        if (keepRawInput) {
          [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setCountryCodeSourceWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource:JreLoadEnum(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource, FROM_NUMBER_WITHOUT_PLUS_SIGN)];
        }
        [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setCountryCodeWithInt:defaultCountryCode];
        return defaultCountryCode;
      }
    }
  }
  [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setCountryCodeWithInt:0];
  return 0;
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource *)maybeStripInternationalPrefixAndNormalizeWithJavaLangStringBuilder:(JavaLangStringBuilder *)number
                                                                                                                              withNSString:(NSString *)possibleIddPrefix {
  if ([((JavaLangStringBuilder *) nil_chk(number)) java_length] == 0) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource, FROM_DEFAULT_COUNTRY);
  }
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS_PATTERN)) matcherWithJavaLangCharSequence:number];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) lookingAt]) {
    [number delete__WithInt:0 withInt:[m end]];
    ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeWithJavaLangStringBuilder_(number);
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource, FROM_NUMBER_WITH_PLUS_SIGN);
  }
  JavaUtilRegexPattern *iddPattern = [((ComGoogleI18nPhonenumbersInternalRegexCache *) nil_chk(regexCache_)) getPatternForRegexWithNSString:possibleIddPrefix];
  ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeWithJavaLangStringBuilder_(number);
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_parsePrefixAsIddWithJavaUtilRegexPattern_withJavaLangStringBuilder_(self, iddPattern, number) ? JreLoadEnum(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource, FROM_NUMBER_WITH_IDD) : JreLoadEnum(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_CountryCodeSource, FROM_DEFAULT_COUNTRY);
}

- (jboolean)maybeStripNationalPrefixAndCarrierCodeWithJavaLangStringBuilder:(JavaLangStringBuilder *)number
                   withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:(ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *)metadata
                                                  withJavaLangStringBuilder:(JavaLangStringBuilder *)carrierCode {
  jint numberLength = [((JavaLangStringBuilder *) nil_chk(number)) java_length];
  NSString *possibleNationalPrefix = [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getNationalPrefixForParsing];
  if (numberLength == 0 || [((NSString *) nil_chk(possibleNationalPrefix)) java_length] == 0) {
    return false;
  }
  JavaUtilRegexMatcher *prefixMatcher = [((JavaUtilRegexPattern *) nil_chk([((ComGoogleI18nPhonenumbersInternalRegexCache *) nil_chk(regexCache_)) getPatternForRegexWithNSString:possibleNationalPrefix])) matcherWithJavaLangCharSequence:number];
  if ([((JavaUtilRegexMatcher *) nil_chk(prefixMatcher)) lookingAt]) {
    ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *generalDesc = [metadata getGeneralDesc];
    jboolean isViableOriginalNumber = [((id<ComGoogleI18nPhonenumbersInternalMatcherApi>) nil_chk(matcherApi_)) matchNationalNumberWithJavaLangCharSequence:number withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:generalDesc withBoolean:false];
    jint numOfGroups = [prefixMatcher groupCount];
    NSString *transformRule = [metadata getNationalPrefixTransformRule];
    if (transformRule == nil || [transformRule java_length] == 0 || [prefixMatcher groupWithInt:numOfGroups] == nil) {
      if (isViableOriginalNumber && ![matcherApi_ matchNationalNumberWithJavaLangCharSequence:[number substringWithInt:[prefixMatcher end]] withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:generalDesc withBoolean:false]) {
        return false;
      }
      if (carrierCode != nil && numOfGroups > 0 && [prefixMatcher groupWithInt:numOfGroups] != nil) {
        [carrierCode appendWithNSString:[prefixMatcher groupWithInt:1]];
      }
      [number delete__WithInt:0 withInt:[prefixMatcher end]];
      return true;
    }
    else {
      JavaLangStringBuilder *transformedNumber = create_JavaLangStringBuilder_initWithJavaLangCharSequence_(number);
      [transformedNumber replaceWithInt:0 withInt:numberLength withNSString:[prefixMatcher replaceFirstWithNSString:transformRule]];
      if (isViableOriginalNumber && ![matcherApi_ matchNationalNumberWithJavaLangCharSequence:[transformedNumber description] withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:generalDesc withBoolean:false]) {
        return false;
      }
      if (carrierCode != nil && numOfGroups > 1) {
        [carrierCode appendWithNSString:[prefixMatcher groupWithInt:1]];
      }
      [number replaceWithInt:0 withInt:[number java_length] withNSString:[transformedNumber description]];
      return true;
    }
  }
  return false;
}

- (NSString *)maybeStripExtensionWithJavaLangStringBuilder:(JavaLangStringBuilder *)number {
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERN)) matcherWithJavaLangCharSequence:number];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) find] && ComGoogleI18nPhonenumbersPhoneNumberUtil_isViablePhoneNumberWithJavaLangCharSequence_([((JavaLangStringBuilder *) nil_chk(number)) substringWithInt:0 withInt:[m start]])) {
    for (jint i = 1, length = [m groupCount]; i <= length; i++) {
      if ([m groupWithInt:i] != nil) {
        NSString *extension = [m groupWithInt:i];
        [((JavaLangStringBuilder *) nil_chk(number)) delete__WithInt:[m start] withInt:[number java_length]];
        return extension;
      }
    }
  }
  return @"";
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)parseWithJavaLangCharSequence:(id<JavaLangCharSequence>)numberToParse
                                                                       withNSString:(NSString *)defaultRegion {
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumber = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
  [self parseWithJavaLangCharSequence:numberToParse withNSString:defaultRegion withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:phoneNumber];
  return phoneNumber;
}

- (void)parseWithJavaLangCharSequence:(id<JavaLangCharSequence>)numberToParse
                         withNSString:(NSString *)defaultRegion
withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)phoneNumber {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_parseHelperWithJavaLangCharSequence_withNSString_withBoolean_withBoolean_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, numberToParse, defaultRegion, false, true, phoneNumber);
}

- (ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)parseAndKeepRawInputWithJavaLangCharSequence:(id<JavaLangCharSequence>)numberToParse
                                                                                      withNSString:(NSString *)defaultRegion {
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumber = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
  [self parseAndKeepRawInputWithJavaLangCharSequence:numberToParse withNSString:defaultRegion withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:phoneNumber];
  return phoneNumber;
}

- (void)parseAndKeepRawInputWithJavaLangCharSequence:(id<JavaLangCharSequence>)numberToParse
                                        withNSString:(NSString *)defaultRegion
withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)phoneNumber {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_parseHelperWithJavaLangCharSequence_withNSString_withBoolean_withBoolean_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, numberToParse, defaultRegion, true, true, phoneNumber);
}

- (id<JavaLangIterable>)findNumbersWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                               withNSString:(NSString *)defaultRegion {
  return [self findNumbersWithJavaLangCharSequence:text withNSString:defaultRegion withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency, VALID) withLong:JavaLangLong_MAX_VALUE];
}

- (id<JavaLangIterable>)findNumbersWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                               withNSString:(NSString *)defaultRegion
      withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency:(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *)leniency
                                                   withLong:(jlong)maxTries {
  return create_ComGoogleI18nPhonenumbersPhoneNumberUtil_1_initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(self, text, defaultRegion, leniency, maxTries);
}

+ (void)setItalianLeadingZerosForPhoneNumberWithJavaLangCharSequence:(id<JavaLangCharSequence>)nationalNumber
                withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)phoneNumber {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_setItalianLeadingZerosForPhoneNumberWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(nationalNumber, phoneNumber);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *)isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)firstNumberIn
                                                                     withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)secondNumberIn {
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *firstNumber = ComGoogleI18nPhonenumbersPhoneNumberUtil_copyCoreFieldsOnlyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(firstNumberIn);
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumber = ComGoogleI18nPhonenumbersPhoneNumberUtil_copyCoreFieldsOnlyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(secondNumberIn);
  if ([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(firstNumber)) hasExtension] && [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(secondNumber)) hasExtension] && ![((NSString *) nil_chk([firstNumber getExtension])) isEqual:[secondNumber getExtension]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, NO_MATCH);
  }
  jint firstNumberCountryCode = [firstNumber getCountryCode];
  jint secondNumberCountryCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(secondNumber)) getCountryCode];
  if (firstNumberCountryCode != 0 && secondNumberCountryCode != 0) {
    if ([firstNumber exactlySameAsWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:secondNumber]) {
      return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, EXACT_MATCH);
    }
    else if (firstNumberCountryCode == secondNumberCountryCode && ComGoogleI18nPhonenumbersPhoneNumberUtil_isNationalNumberSuffixOfTheOtherWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, firstNumber, secondNumber)) {
      return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, SHORT_NSN_MATCH);
    }
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, NO_MATCH);
  }
  [firstNumber setCountryCodeWithInt:secondNumberCountryCode];
  if ([firstNumber exactlySameAsWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:secondNumber]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, NSN_MATCH);
  }
  if (ComGoogleI18nPhonenumbersPhoneNumberUtil_isNationalNumberSuffixOfTheOtherWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, firstNumber, secondNumber)) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, SHORT_NSN_MATCH);
  }
  return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, NO_MATCH);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *)isNumberMatchWithJavaLangCharSequence:(id<JavaLangCharSequence>)firstNumber
                                                                     withJavaLangCharSequence:(id<JavaLangCharSequence>)secondNumber {
  @try {
    ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *firstNumberAsProto = [self parseWithJavaLangCharSequence:firstNumber withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION];
    return [self isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:firstNumberAsProto withJavaLangCharSequence:secondNumber];
  }
  @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
    if ([e getErrorType] == JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE)) {
      @try {
        ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumberAsProto = [self parseWithJavaLangCharSequence:secondNumber withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION];
        return [self isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:secondNumberAsProto withJavaLangCharSequence:firstNumber];
      }
      @catch (ComGoogleI18nPhonenumbersNumberParseException *e2) {
        if ([e2 getErrorType] == JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE)) {
          @try {
            ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *firstNumberProto = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
            ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumberProto = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
            ComGoogleI18nPhonenumbersPhoneNumberUtil_parseHelperWithJavaLangCharSequence_withNSString_withBoolean_withBoolean_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, firstNumber, nil, false, false, firstNumberProto);
            ComGoogleI18nPhonenumbersPhoneNumberUtil_parseHelperWithJavaLangCharSequence_withNSString_withBoolean_withBoolean_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, secondNumber, nil, false, false, secondNumberProto);
            return [self isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:firstNumberProto withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:secondNumberProto];
          }
          @catch (ComGoogleI18nPhonenumbersNumberParseException *e3) {
          }
        }
      }
    }
  }
  return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, NOT_A_NUMBER);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *)isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)firstNumber
                                                                                                 withJavaLangCharSequence:(id<JavaLangCharSequence>)secondNumber {
  @try {
    ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumberAsProto = [self parseWithJavaLangCharSequence:secondNumber withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION];
    return [self isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:firstNumber withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:secondNumberAsProto];
  }
  @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
    if ([e getErrorType] == JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE)) {
      NSString *firstNumberRegion = [self getRegionCodeForCountryCodeWithInt:[((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(firstNumber)) getCountryCode]];
      @try {
        if (![((NSString *) nil_chk(firstNumberRegion)) isEqual:ComGoogleI18nPhonenumbersPhoneNumberUtil_UNKNOWN_REGION]) {
          ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumberWithFirstNumberRegion = [self parseWithJavaLangCharSequence:secondNumber withNSString:firstNumberRegion];
          ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *match = [self isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:firstNumber withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:secondNumberWithFirstNumberRegion];
          if (match == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, EXACT_MATCH)) {
            return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, NSN_MATCH);
          }
          return match;
        }
        else {
          ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumberProto = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
          ComGoogleI18nPhonenumbersPhoneNumberUtil_parseHelperWithJavaLangCharSequence_withNSString_withBoolean_withBoolean_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(self, secondNumber, nil, false, false, secondNumberProto);
          return [self isNumberMatchWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:firstNumber withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:secondNumberProto];
        }
      }
      @catch (ComGoogleI18nPhonenumbersNumberParseException *e2) {
      }
    }
  }
  return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType, NOT_A_NUMBER);
}

- (jboolean)canBeInternationallyDialledWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForRegionWithNSString:[self getRegionCodeForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number]];
  if (metadata == nil) {
    return true;
  }
  NSString *nationalSignificantNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  return ![self isNumberMatchingDescWithNSString:nationalSignificantNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getNoInternationalDialling]];
}

- (jboolean)isMobileNumberPortableRegionWithNSString:(NSString *)regionCode {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForRegionWithNSString:regionCode];
  if (metadata == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$", @"Invalid or unknown region code provided: ", regionCode)];
    return false;
  }
  return [metadata isMobileNumberPortableRegion];
}

- (void)dealloc {
  RELEASE_(metadataSource_);
  RELEASE_(countryCallingCodeToRegionCodeMap_);
  RELEASE_(matcherApi_);
  RELEASE_(nanpaRegions_);
  RELEASE_(regexCache_);
  RELEASE_(supportedRegions_);
  RELEASE_(countryCodesForNonGeographicalRegion_);
  [super dealloc];
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersPhoneNumberUtil class]) {
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_logger, JavaUtilLoggingLogger_getLoggerWithNSString_([ComGoogleI18nPhonenumbersPhoneNumberUtil_class_() getName]));
    {
      JavaUtilHashMap *mobileTokenMap = create_JavaUtilHashMap_init();
      [mobileTokenMap putWithId:JavaLangInteger_valueOfWithInt_(52) withId:@"1"];
      [mobileTokenMap putWithId:JavaLangInteger_valueOfWithInt_(54) withId:@"9"];
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_MOBILE_TOKEN_MAPPINGS, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(mobileTokenMap));
      JavaUtilHashSet *geoMobileCountriesWithoutMobileAreaCodes = create_JavaUtilHashSet_init();
      [geoMobileCountriesWithoutMobileAreaCodes addWithId:JavaLangInteger_valueOfWithInt_(86)];
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_GEO_MOBILE_COUNTRIES_WITHOUT_MOBILE_AREA_CODES, JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(geoMobileCountriesWithoutMobileAreaCodes));
      JavaUtilHashSet *geoMobileCountries = create_JavaUtilHashSet_init();
      [geoMobileCountries addWithId:JavaLangInteger_valueOfWithInt_(52)];
      [geoMobileCountries addWithId:JavaLangInteger_valueOfWithInt_(54)];
      [geoMobileCountries addWithId:JavaLangInteger_valueOfWithInt_(55)];
      [geoMobileCountries addWithId:JavaLangInteger_valueOfWithInt_(62)];
      [geoMobileCountries addAllWithJavaUtilCollection:geoMobileCountriesWithoutMobileAreaCodes];
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_GEO_MOBILE_COUNTRIES, JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(geoMobileCountries));
      JavaUtilHashMap *asciiDigitMappings = create_JavaUtilHashMap_init();
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('0') withId:JavaLangCharacter_valueOfWithChar_('0')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('1') withId:JavaLangCharacter_valueOfWithChar_('1')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('2') withId:JavaLangCharacter_valueOfWithChar_('2')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('3') withId:JavaLangCharacter_valueOfWithChar_('3')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('4') withId:JavaLangCharacter_valueOfWithChar_('4')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('5') withId:JavaLangCharacter_valueOfWithChar_('5')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('6') withId:JavaLangCharacter_valueOfWithChar_('6')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('7') withId:JavaLangCharacter_valueOfWithChar_('7')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('8') withId:JavaLangCharacter_valueOfWithChar_('8')];
      [asciiDigitMappings putWithId:JavaLangCharacter_valueOfWithChar_('9') withId:JavaLangCharacter_valueOfWithChar_('9')];
      JavaUtilHashMap *alphaMap = create_JavaUtilHashMap_initWithInt_(40);
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('A') withId:JavaLangCharacter_valueOfWithChar_('2')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('B') withId:JavaLangCharacter_valueOfWithChar_('2')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('C') withId:JavaLangCharacter_valueOfWithChar_('2')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('D') withId:JavaLangCharacter_valueOfWithChar_('3')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('E') withId:JavaLangCharacter_valueOfWithChar_('3')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('F') withId:JavaLangCharacter_valueOfWithChar_('3')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('G') withId:JavaLangCharacter_valueOfWithChar_('4')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('H') withId:JavaLangCharacter_valueOfWithChar_('4')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('I') withId:JavaLangCharacter_valueOfWithChar_('4')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('J') withId:JavaLangCharacter_valueOfWithChar_('5')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('K') withId:JavaLangCharacter_valueOfWithChar_('5')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('L') withId:JavaLangCharacter_valueOfWithChar_('5')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('M') withId:JavaLangCharacter_valueOfWithChar_('6')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('N') withId:JavaLangCharacter_valueOfWithChar_('6')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('O') withId:JavaLangCharacter_valueOfWithChar_('6')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('P') withId:JavaLangCharacter_valueOfWithChar_('7')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('Q') withId:JavaLangCharacter_valueOfWithChar_('7')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('R') withId:JavaLangCharacter_valueOfWithChar_('7')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('S') withId:JavaLangCharacter_valueOfWithChar_('7')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('T') withId:JavaLangCharacter_valueOfWithChar_('8')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('U') withId:JavaLangCharacter_valueOfWithChar_('8')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('V') withId:JavaLangCharacter_valueOfWithChar_('8')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('W') withId:JavaLangCharacter_valueOfWithChar_('9')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('X') withId:JavaLangCharacter_valueOfWithChar_('9')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('Y') withId:JavaLangCharacter_valueOfWithChar_('9')];
      [alphaMap putWithId:JavaLangCharacter_valueOfWithChar_('Z') withId:JavaLangCharacter_valueOfWithChar_('9')];
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_MAPPINGS, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(alphaMap));
      JavaUtilHashMap *combinedMap = create_JavaUtilHashMap_initWithInt_(100);
      [combinedMap putAllWithJavaUtilMap:ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_MAPPINGS];
      [combinedMap putAllWithJavaUtilMap:asciiDigitMappings];
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_PHONE_MAPPINGS, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(combinedMap));
      JavaUtilHashMap *diallableCharMap = create_JavaUtilHashMap_init();
      [diallableCharMap putAllWithJavaUtilMap:asciiDigitMappings];
      [diallableCharMap putWithId:JavaLangCharacter_valueOfWithChar_(ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_SIGN) withId:JavaLangCharacter_valueOfWithChar_(ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_SIGN)];
      [diallableCharMap putWithId:JavaLangCharacter_valueOfWithChar_('*') withId:JavaLangCharacter_valueOfWithChar_('*')];
      [diallableCharMap putWithId:JavaLangCharacter_valueOfWithChar_('#') withId:JavaLangCharacter_valueOfWithChar_('#')];
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_DIALLABLE_CHAR_MAPPINGS, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(diallableCharMap));
      JavaUtilHashMap *allPlusNumberGroupings = create_JavaUtilHashMap_init();
      for (JavaLangCharacter *boxed__ in nil_chk([((id<JavaUtilMap>) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_MAPPINGS)) keySet])) {
        jchar c = [((JavaLangCharacter *) nil_chk(boxed__)) charValue];
        [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(JavaLangCharacter_toLowerCaseWithChar_(c)) withId:JavaLangCharacter_valueOfWithChar_(c)];
        [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(c) withId:JavaLangCharacter_valueOfWithChar_(c)];
      }
      [allPlusNumberGroupings putAllWithJavaUtilMap:asciiDigitMappings];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_('-') withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0xff0d) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2010) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2011) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2012) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2013) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2014) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2015) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2212) withId:JavaLangCharacter_valueOfWithChar_('-')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_('/') withId:JavaLangCharacter_valueOfWithChar_('/')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0xff0f) withId:JavaLangCharacter_valueOfWithChar_('/')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(' ') withId:JavaLangCharacter_valueOfWithChar_(' ')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x3000) withId:JavaLangCharacter_valueOfWithChar_(' ')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0x2060) withId:JavaLangCharacter_valueOfWithChar_(' ')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_('.') withId:JavaLangCharacter_valueOfWithChar_('.')];
      [allPlusNumberGroupings putWithId:JavaLangCharacter_valueOfWithChar_(0xff0e) withId:JavaLangCharacter_valueOfWithChar_('.')];
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_ALL_PLUS_NUMBER_GROUPING_SYMBOLS, JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(allPlusNumberGroupings));
    }
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_SINGLE_INTERNATIONAL_PREFIX, JavaUtilRegexPattern_compileWithNSString_(@"[\\d]+(?:[~\u2053\u223c\uff5e][\\d]+)?"));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_ALPHA, JreStrcat("$$", [((NSString *) nil_chk(JavaUtilArrays_toStringWithNSObjectArray_([((id<JavaUtilSet>) nil_chk([ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_MAPPINGS keySet])) toArray]))) java_replaceAll:@"[, \\[\\]]" withReplacement:@""], [((NSString *) nil_chk([((NSString *) nil_chk(JavaUtilArrays_toStringWithNSObjectArray_([((id<JavaUtilSet>) nil_chk([ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_MAPPINGS keySet])) toArray]))) lowercaseString])) java_replaceAll:@"[, \\[\\]]" withReplacement:@""]));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS_PATTERN, JavaUtilRegexPattern_compileWithNSString_(JreStrcat("C$$", '[', ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS, @"]+")));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_SEPARATOR_PATTERN, JavaUtilRegexPattern_compileWithNSString_(JreStrcat("C$$", '[', ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PUNCTUATION, @"]+")));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_CAPTURING_DIGIT_PATTERN, JavaUtilRegexPattern_compileWithNSString_(JreStrcat("C$C", '(', ComGoogleI18nPhonenumbersPhoneNumberUtil_DIGITS, ')')));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_START_CHAR_PATTERN, JavaUtilRegexPattern_compileWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_START_CHAR));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_SECOND_NUMBER_START_PATTERN, JavaUtilRegexPattern_compileWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil_SECOND_NUMBER_START));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_UNWANTED_END_CHAR_PATTERN, JavaUtilRegexPattern_compileWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil_UNWANTED_END_CHARS));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_ALPHA_PHONE_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"(?:.*?[A-Za-z]){3}.*"));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PHONE_NUMBER, JreStrcat("$CI$$$$C$$$$C$$$", ComGoogleI18nPhonenumbersPhoneNumberUtil_DIGITS, '{', ComGoogleI18nPhonenumbersPhoneNumberUtil_MIN_LENGTH_FOR_NSN, @"}|[", ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS, @"]*+(?:[", ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PUNCTUATION, ComGoogleI18nPhonenumbersPhoneNumberUtil_STAR_SIGN, @"]*", ComGoogleI18nPhonenumbersPhoneNumberUtil_DIGITS, @"){3,}[", ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PUNCTUATION, ComGoogleI18nPhonenumbersPhoneNumberUtil_STAR_SIGN, ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_ALPHA, ComGoogleI18nPhonenumbersPhoneNumberUtil_DIGITS, @"]*"));
    {
      NSString *singleExtnSymbolsForMatching = @"x\uff58#\uff03~\uff5e";
      NSString *singleExtnSymbolsForParsing = JreStrcat("$$", @",;", singleExtnSymbolsForMatching);
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERNS_FOR_PARSING, ComGoogleI18nPhonenumbersPhoneNumberUtil_createExtnPatternWithNSString_(singleExtnSymbolsForParsing));
      JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERNS_FOR_MATCHING, ComGoogleI18nPhonenumbersPhoneNumberUtil_createExtnPatternWithNSString_(singleExtnSymbolsForMatching));
    }
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERN, JavaUtilRegexPattern_compileWithNSString_withInt_(JreStrcat("$$$", @"(?:", ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERNS_FOR_PARSING, @")$"), ComGoogleI18nPhonenumbersPhoneNumberUtil_REGEX_FLAGS));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PHONE_NUMBER_PATTERN, JavaUtilRegexPattern_compileWithNSString_withInt_(JreStrcat("$$$$", ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PHONE_NUMBER, @"(?:", ComGoogleI18nPhonenumbersPhoneNumberUtil_EXTN_PATTERNS_FOR_PARSING, @")?"), ComGoogleI18nPhonenumbersPhoneNumberUtil_REGEX_FLAGS));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_NON_DIGITS_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"(\\D+)"));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_FIRST_GROUP_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"(\\$\\d)"));
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_FIRST_GROUP_ONLY_PREFIX_PATTERN, JavaUtilRegexPattern_compileWithNSString_(@"\\(?\\$1\\)?"));
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersPhoneNumberUtil)
  }
}

@end

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_createExtnPatternWithNSString_(NSString *singleExtnSymbols) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  return (JreStrcat("$$$$$$$$$", ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_EXTN_PREFIX, ComGoogleI18nPhonenumbersPhoneNumberUtil_CAPTURING_EXTN_DIGITS, @"|[ \u00a0\\t,]*(?:e?xt(?:ensi(?:o\u0301?|\u00f3))?n?|\uff45?\uff58\uff54\uff4e?|[", singleExtnSymbols, @"]|int|anexo|\uff49\uff4e\uff54)[:\\.\uff0e]?[ \u00a0\\t,-]*", ComGoogleI18nPhonenumbersPhoneNumberUtil_CAPTURING_EXTN_DIGITS, @"#?|[- ]+(", ComGoogleI18nPhonenumbersPhoneNumberUtil_DIGITS, @"{1,5})#"));
}

void ComGoogleI18nPhonenumbersPhoneNumberUtil_initWithComGoogleI18nPhonenumbersMetadataSource_withJavaUtilMap_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<ComGoogleI18nPhonenumbersMetadataSource> metadataSource, id<JavaUtilMap> countryCallingCodeToRegionCodeMap) {
  NSObject_init(self);
  JreStrongAssign(&self->matcherApi_, ComGoogleI18nPhonenumbersInternalRegexBasedMatcher_create());
  JreStrongAssignAndConsume(&self->nanpaRegions_, new_JavaUtilHashSet_initWithInt_(35));
  JreStrongAssignAndConsume(&self->regexCache_, new_ComGoogleI18nPhonenumbersInternalRegexCache_initWithInt_(100));
  JreStrongAssignAndConsume(&self->supportedRegions_, new_JavaUtilHashSet_initWithInt_(320));
  JreStrongAssignAndConsume(&self->countryCodesForNonGeographicalRegion_, new_JavaUtilHashSet_init());
  JreStrongAssign(&self->metadataSource_, metadataSource);
  JreStrongAssign(&self->countryCallingCodeToRegionCodeMap_, countryCallingCodeToRegionCodeMap);
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(countryCallingCodeToRegionCodeMap)) entrySet])) {
    id<JavaUtilList> regionCodes = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
    if ([((id<JavaUtilList>) nil_chk(regionCodes)) size] == 1 && [((NSString *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_REGION_CODE_FOR_NON_GEO_ENTITY)) isEqual:[regionCodes getWithInt:0]]) {
      [self->countryCodesForNonGeographicalRegion_ addWithId:[entry_ getKey]];
    }
    else {
      [self->supportedRegions_ addAllWithJavaUtilCollection:regionCodes];
    }
  }
  if ([self->supportedRegions_ removeWithId:ComGoogleI18nPhonenumbersPhoneNumberUtil_REGION_CODE_FOR_NON_GEO_ENTITY]) {
    [((JavaUtilLoggingLogger *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_logger)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:@"invalid metadata (country calling code was mapped to the non-geo entity as well as specific region(s))"];
  }
  [self->nanpaRegions_ addAllWithJavaUtilCollection:[countryCallingCodeToRegionCodeMap getWithId:JavaLangInteger_valueOfWithInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_NANPA_COUNTRY_CODE)]];
}

ComGoogleI18nPhonenumbersPhoneNumberUtil *new_ComGoogleI18nPhonenumbersPhoneNumberUtil_initWithComGoogleI18nPhonenumbersMetadataSource_withJavaUtilMap_(id<ComGoogleI18nPhonenumbersMetadataSource> metadataSource, id<JavaUtilMap> countryCallingCodeToRegionCodeMap) {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil, initWithComGoogleI18nPhonenumbersMetadataSource_withJavaUtilMap_, metadataSource, countryCallingCodeToRegionCodeMap)
}

ComGoogleI18nPhonenumbersPhoneNumberUtil *create_ComGoogleI18nPhonenumbersPhoneNumberUtil_initWithComGoogleI18nPhonenumbersMetadataSource_withJavaUtilMap_(id<ComGoogleI18nPhonenumbersMetadataSource> metadataSource, id<JavaUtilMap> countryCallingCodeToRegionCodeMap) {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil, initWithComGoogleI18nPhonenumbersMetadataSource_withJavaUtilMap_, metadataSource, countryCallingCodeToRegionCodeMap)
}

id<JavaLangCharSequence> ComGoogleI18nPhonenumbersPhoneNumberUtil_extractPossibleNumberWithJavaLangCharSequence_(id<JavaLangCharSequence> number) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_START_CHAR_PATTERN)) matcherWithJavaLangCharSequence:number];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) find]) {
    number = [((id<JavaLangCharSequence>) nil_chk(number)) subSequenceFrom:[m start] to:[number java_length]];
    JavaUtilRegexMatcher *trailingCharsMatcher = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_UNWANTED_END_CHAR_PATTERN)) matcherWithJavaLangCharSequence:number];
    if ([((JavaUtilRegexMatcher *) nil_chk(trailingCharsMatcher)) find]) {
      number = [((id<JavaLangCharSequence>) nil_chk(number)) subSequenceFrom:0 to:[trailingCharsMatcher start]];
    }
    JavaUtilRegexMatcher *secondNumber = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_SECOND_NUMBER_START_PATTERN)) matcherWithJavaLangCharSequence:number];
    if ([((JavaUtilRegexMatcher *) nil_chk(secondNumber)) find]) {
      number = [((id<JavaLangCharSequence>) nil_chk(number)) subSequenceFrom:0 to:[secondNumber start]];
    }
    return number;
  }
  else {
    return @"";
  }
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_isViablePhoneNumberWithJavaLangCharSequence_(id<JavaLangCharSequence> number) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  if ([((id<JavaLangCharSequence>) nil_chk(number)) java_length] < ComGoogleI18nPhonenumbersPhoneNumberUtil_MIN_LENGTH_FOR_NSN) {
    return false;
  }
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_PHONE_NUMBER_PATTERN)) matcherWithJavaLangCharSequence:number];
  return [((JavaUtilRegexMatcher *) nil_chk(m)) matches];
}

JavaLangStringBuilder *ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeWithJavaLangStringBuilder_(JavaLangStringBuilder *number) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_VALID_ALPHA_PHONE_PATTERN)) matcherWithJavaLangCharSequence:number];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
    [((JavaLangStringBuilder *) nil_chk(number)) replaceWithInt:0 withInt:[number java_length] withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeHelperWithJavaLangCharSequence_withJavaUtilMap_withBoolean_(number, ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_PHONE_MAPPINGS, true)];
  }
  else {
    [((JavaLangStringBuilder *) nil_chk(number)) replaceWithInt:0 withInt:[number java_length] withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsOnlyWithJavaLangCharSequence_(number)];
  }
  return number;
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsOnlyWithJavaLangCharSequence_(id<JavaLangCharSequence> number) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  return [((JavaLangStringBuilder *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsWithJavaLangCharSequence_withBoolean_(number, false))) description];
}

JavaLangStringBuilder *ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsWithJavaLangCharSequence_withBoolean_(id<JavaLangCharSequence> number, jboolean keepNonDigits) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  JavaLangStringBuilder *normalizedDigits = create_JavaLangStringBuilder_initWithInt_([((id<JavaLangCharSequence>) nil_chk(number)) java_length]);
  for (jint i = 0; i < [number java_length]; i++) {
    jchar c = [number charAtWithInt:i];
    jint digit = JavaLangCharacter_digitWithChar_withInt_(c, 10);
    if (digit != -1) {
      [normalizedDigits appendWithInt:digit];
    }
    else if (keepNonDigits) {
      [normalizedDigits appendWithChar:c];
    }
  }
  return normalizedDigits;
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDiallableCharsOnlyWithJavaLangCharSequence_(id<JavaLangCharSequence> number) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeHelperWithJavaLangCharSequence_withJavaUtilMap_withBoolean_(number, ComGoogleI18nPhonenumbersPhoneNumberUtil_DIALLABLE_CHAR_MAPPINGS, true);
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_convertAlphaCharactersInNumberWithJavaLangCharSequence_(id<JavaLangCharSequence> number) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeHelperWithJavaLangCharSequence_withJavaUtilMap_withBoolean_(number, ComGoogleI18nPhonenumbersPhoneNumberUtil_ALPHA_PHONE_MAPPINGS, false);
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryMobileTokenWithInt_(jint countryCallingCode) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  if ([((id<JavaUtilMap>) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_MOBILE_TOKEN_MAPPINGS)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)]) {
    return [ComGoogleI18nPhonenumbersPhoneNumberUtil_MOBILE_TOKEN_MAPPINGS getWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)];
  }
  return @"";
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeHelperWithJavaLangCharSequence_withJavaUtilMap_withBoolean_(id<JavaLangCharSequence> number, id<JavaUtilMap> normalizationReplacements, jboolean removeNonMatches) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  JavaLangStringBuilder *normalizedNumber = create_JavaLangStringBuilder_initWithInt_([((id<JavaLangCharSequence>) nil_chk(number)) java_length]);
  for (jint i = 0; i < [number java_length]; i++) {
    jchar character = [number charAtWithInt:i];
    JavaLangCharacter *newDigit = [((id<JavaUtilMap>) nil_chk(normalizationReplacements)) getWithId:JavaLangCharacter_valueOfWithChar_(JavaLangCharacter_toUpperCaseWithChar_(character))];
    if (newDigit != nil) {
      [normalizedNumber appendWithId:newDigit];
    }
    else if (!removeNonMatches) {
      [normalizedNumber appendWithChar:character];
    }
  }
  return [normalizedNumber description];
}

void ComGoogleI18nPhonenumbersPhoneNumberUtil_setInstanceWithComGoogleI18nPhonenumbersPhoneNumberUtil_(ComGoogleI18nPhonenumbersPhoneNumberUtil *util) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  @synchronized(ComGoogleI18nPhonenumbersPhoneNumberUtil_class_()) {
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberUtil_instance, util);
  }
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasPossibleNumberDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_(ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *desc) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(desc)) getPossibleLengthCount] != 1 || [desc getPossibleLengthWithInt:0] != -1;
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_(ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *desc) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  return [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(desc)) hasExampleNumber] || ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasPossibleNumberDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_(desc) || [desc hasNationalNumberPattern];
}

id<JavaUtilSet> ComGoogleI18nPhonenumbersPhoneNumberUtil_getSupportedTypesForMetadataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata) {
  id<JavaUtilSet> types = create_JavaUtilTreeSet_init();
  {
    IOSObjectArray *a__ = ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values();
    ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *type = *b__++;
      if (type == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE_OR_MOBILE) || type == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN)) {
        continue;
      }
      if (ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_([self getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:metadata withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:type])) {
        [types addWithId:type];
      }
    }
  }
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(types);
}

ComGoogleI18nPhonenumbersPhoneNumberUtil *ComGoogleI18nPhonenumbersPhoneNumberUtil_getInstance() {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  @synchronized(ComGoogleI18nPhonenumbersPhoneNumberUtil_class_()) {
    if (ComGoogleI18nPhonenumbersPhoneNumberUtil_instance == nil) {
      ComGoogleI18nPhonenumbersPhoneNumberUtil_setInstanceWithComGoogleI18nPhonenumbersPhoneNumberUtil_(ComGoogleI18nPhonenumbersPhoneNumberUtil_createInstanceWithComGoogleI18nPhonenumbersMetadataLoader_(JreLoadStatic(ComGoogleI18nPhonenumbersMetadataManager, DEFAULT_METADATA_LOADER)));
    }
    return JreRetainedLocalValue(ComGoogleI18nPhonenumbersPhoneNumberUtil_instance);
  }
}

ComGoogleI18nPhonenumbersPhoneNumberUtil *ComGoogleI18nPhonenumbersPhoneNumberUtil_createInstanceWithComGoogleI18nPhonenumbersMetadataLoader_(id<ComGoogleI18nPhonenumbersMetadataLoader> metadataLoader) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  if (metadataLoader == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"metadataLoader could not be null.");
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_createInstanceWithComGoogleI18nPhonenumbersMetadataSource_(create_ComGoogleI18nPhonenumbersMultiFileMetadataSourceImpl_initPackagePrivateWithComGoogleI18nPhonenumbersMetadataLoader_(metadataLoader));
}

ComGoogleI18nPhonenumbersPhoneNumberUtil *ComGoogleI18nPhonenumbersPhoneNumberUtil_createInstanceWithComGoogleI18nPhonenumbersMetadataSource_(id<ComGoogleI18nPhonenumbersMetadataSource> metadataSource) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  if (metadataSource == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"metadataSource could not be null.");
  }
  return create_ComGoogleI18nPhonenumbersPhoneNumberUtil_initWithComGoogleI18nPhonenumbersMetadataSource_withJavaUtilMap_(metadataSource, ComGoogleI18nPhonenumbersCountryCodeToRegionCodeMap_getCountryCodeToRegionCodeMap());
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_formattingRuleHasFirstGroupOnlyWithNSString_(NSString *nationalPrefixFormattingRule) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  return [((NSString *) nil_chk(nationalPrefixFormattingRule)) java_length] == 0 || [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_FIRST_GROUP_ONLY_PREFIX_PATTERN)) matcherWithJavaLangCharSequence:nationalPrefixFormattingRule])) matches];
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *regionCode) {
  return regionCode != nil && [((id<JavaUtilSet>) nil_chk(self->supportedRegions_)) containsWithId:regionCode];
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_hasValidCountryCallingCodeWithInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, jint countryCallingCode) {
  return [((id<JavaUtilMap>) nil_chk(self->countryCallingCodeToRegionCodeMap_)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(countryCallingCode)];
}

ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, jint countryCallingCode, NSString *regionCode) {
  return [((NSString *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_REGION_CODE_FOR_NON_GEO_ENTITY)) isEqual:regionCode] ? [self getMetadataForNonGeographicalRegionWithInt:countryCallingCode] : [self getMetadataForRegionWithNSString:regionCode];
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_rawInputContainsNationalPrefixWithNSString_withNSString_withNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *rawInput, NSString *nationalPrefix, NSString *regionCode) {
  NSString *normalizedNationalNumber = ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsOnlyWithJavaLangCharSequence_(rawInput);
  if ([((NSString *) nil_chk(normalizedNationalNumber)) java_hasPrefix:nationalPrefix]) {
    @try {
      return [self isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:[self parseWithJavaLangCharSequence:[normalizedNationalNumber java_substring:[((NSString *) nil_chk(nationalPrefix)) java_length]] withNSString:regionCode]];
    }
    @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
      return false;
    }
  }
  return false;
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_hasFormattingPatternForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number) {
  jint countryCallingCode = [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode];
  NSString *phoneNumberRegion = [self getRegionCodeForCountryCodeWithInt:countryCallingCode];
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCallingCode, phoneNumberRegion);
  if (metadata == nil) {
    return false;
  }
  NSString *nationalNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *formatRule = [self chooseFormattingPatternForNumberWithJavaUtilList:[metadata numberFormats] withNSString:nationalNumber];
  return formatRule != nil;
}

void ComGoogleI18nPhonenumbersPhoneNumberUtil_prefixNumberWithCountryCallingCodeWithInt_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, jint countryCallingCode, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, JavaLangStringBuilder *formattedNumber) {
  switch ([numberFormat ordinal]) {
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_Enum_E164:
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(formattedNumber)) insertWithInt:0 withInt:countryCallingCode])) insertWithInt:0 withChar:ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_SIGN];
    return;
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_Enum_INTERNATIONAL:
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(formattedNumber)) insertWithInt:0 withNSString:@" "])) insertWithInt:0 withInt:countryCallingCode])) insertWithInt:0 withChar:ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_SIGN];
    return;
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_Enum_RFC3966:
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(formattedNumber)) insertWithInt:0 withNSString:@"-"])) insertWithInt:0 withInt:countryCallingCode])) insertWithInt:0 withChar:ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_SIGN])) insertWithInt:0 withNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_PREFIX];
    return;
    case ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_Enum_NATIONAL:
    default:
    return;
  }
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat) {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(self, number, metadata, numberFormat, nil);
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, id<JavaLangCharSequence> carrierCode) {
  id<JavaUtilList> intlNumberFormats = [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) intlNumberFormats];
  id<JavaUtilList> availableFormats = ([((id<JavaUtilList>) nil_chk(intlNumberFormats)) size] == 0 || numberFormat == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL)) ? [metadata numberFormats] : [metadata intlNumberFormats];
  ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *formattingPattern = [self chooseFormattingPatternForNumberWithJavaUtilList:availableFormats withNSString:number];
  return (formattingPattern == nil) ? number : ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnUsingPatternWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(self, number, formattingPattern, numberFormat, carrierCode);
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_formatNsnUsingPatternWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_NumberFormat_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangCharSequence_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *nationalNumber, ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *formattingPattern, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, id<JavaLangCharSequence> carrierCode) {
  NSString *numberFormatRule = [((ComGoogleI18nPhonenumbersPhonemetadata_NumberFormat *) nil_chk(formattingPattern)) getFormat];
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk([((ComGoogleI18nPhonenumbersInternalRegexCache *) nil_chk(self->regexCache_)) getPatternForRegexWithNSString:[formattingPattern getPattern]])) matcherWithJavaLangCharSequence:nationalNumber];
  NSString *formattedNationalNumber = @"";
  if (numberFormat == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL) && carrierCode != nil && [carrierCode java_length] > 0 && [((NSString *) nil_chk([formattingPattern getDomesticCarrierCodeFormattingRule])) java_length] > 0) {
    NSString *carrierCodeFormattingRule = [formattingPattern getDomesticCarrierCodeFormattingRule];
    carrierCodeFormattingRule = [((NSString *) nil_chk(carrierCodeFormattingRule)) java_replace:ComGoogleI18nPhonenumbersPhoneNumberUtil_CC_STRING withSequence:carrierCode];
    numberFormatRule = [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_FIRST_GROUP_PATTERN)) matcherWithJavaLangCharSequence:numberFormatRule])) replaceFirstWithNSString:carrierCodeFormattingRule];
    formattedNationalNumber = [((JavaUtilRegexMatcher *) nil_chk(m)) replaceAllWithNSString:numberFormatRule];
  }
  else {
    NSString *nationalPrefixFormattingRule = [formattingPattern getNationalPrefixFormattingRule];
    if (numberFormat == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, NATIONAL) && nationalPrefixFormattingRule != nil && [nationalPrefixFormattingRule java_length] > 0) {
      JavaUtilRegexMatcher *firstGroupMatcher = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_FIRST_GROUP_PATTERN)) matcherWithJavaLangCharSequence:numberFormatRule];
      formattedNationalNumber = [((JavaUtilRegexMatcher *) nil_chk(m)) replaceAllWithNSString:[((JavaUtilRegexMatcher *) nil_chk(firstGroupMatcher)) replaceFirstWithNSString:nationalPrefixFormattingRule]];
    }
    else {
      formattedNationalNumber = [((JavaUtilRegexMatcher *) nil_chk(m)) replaceAllWithNSString:numberFormatRule];
    }
  }
  if (numberFormat == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, RFC3966)) {
    JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_SEPARATOR_PATTERN)) matcherWithJavaLangCharSequence:formattedNationalNumber];
    if ([((JavaUtilRegexMatcher *) nil_chk(matcher)) lookingAt]) {
      formattedNationalNumber = [matcher replaceFirstWithNSString:@""];
    }
    formattedNationalNumber = [((JavaUtilRegexMatcher *) nil_chk([matcher resetWithJavaLangCharSequence:formattedNationalNumber])) replaceAllWithNSString:@"-"];
  }
  return formattedNationalNumber;
}

void ComGoogleI18nPhonenumbersPhoneNumberUtil_maybeAppendFormattedExtensionWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *numberFormat, JavaLangStringBuilder *formattedNumber) {
  if ([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) hasExtension] && [((NSString *) nil_chk([number getExtension])) java_length] > 0) {
    if (numberFormat == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat, RFC3966)) {
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(formattedNumber)) appendWithNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_EXTN_PREFIX])) appendWithNSString:[number getExtension]];
    }
    else {
      if ([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) hasPreferredExtnPrefix]) {
        [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(formattedNumber)) appendWithNSString:[metadata getPreferredExtnPrefix]])) appendWithNSString:[number getExtension]];
      }
      else {
        [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(formattedNumber)) appendWithNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_DEFAULT_EXTN_PREFIX])) appendWithNSString:[number getExtension]];
      }
    }
  }
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *ComGoogleI18nPhonenumbersPhoneNumberUtil_getNumberTypeHelperWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *nationalNumber, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata) {
  if (![self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getGeneralDesc]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getPremiumRate]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, PREMIUM_RATE);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getTollFree]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, TOLL_FREE);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getSharedCost]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, SHARED_COST);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getVoip]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, VOIP);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getPersonalNumber]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, PERSONAL_NUMBER);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getPager]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, PAGER);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getUan]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UAN);
  }
  if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getVoicemail]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, VOICEMAIL);
  }
  jboolean isFixedLine = [self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getFixedLine]];
  if (isFixedLine) {
    if ([metadata getSameMobileAndFixedLinePattern]) {
      return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE_OR_MOBILE);
    }
    else if ([self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getMobile]]) {
      return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE_OR_MOBILE);
    }
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE);
  }
  if (![metadata getSameMobileAndFixedLinePattern] && [self isNumberMatchingDescWithNSString:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc:[metadata getMobile]]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE);
  }
  return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN);
}

NSString *ComGoogleI18nPhonenumbersPhoneNumberUtil_getRegionCodeForNumberFromRegionListWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaUtilList_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *number, id<JavaUtilList> regionCodes) {
  NSString *nationalNumber = [self getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  for (NSString * __strong regionCode in nil_chk(regionCodes)) {
    ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForRegionWithNSString:regionCode];
    if ([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) hasLeadingDigits]) {
      if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk([((ComGoogleI18nPhonenumbersInternalRegexCache *) nil_chk(self->regexCache_)) getPatternForRegexWithNSString:[metadata getLeadingDigits]])) matcherWithJavaLangCharSequence:nationalNumber])) lookingAt]) {
        return regionCode;
      }
    }
    else if (ComGoogleI18nPhonenumbersPhoneNumberUtil_getNumberTypeHelperWithNSString_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, nationalNumber, metadata) != JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN)) {
      return regionCode;
    }
  }
  return nil;
}

jint ComGoogleI18nPhonenumbersPhoneNumberUtil_getCountryCodeForValidRegionWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *regionCode) {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata = [self getMetadataForRegionWithNSString:regionCode];
  if (metadata == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Invalid region code: ", regionCode));
  }
  return [metadata getCountryCode];
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata) {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(self, number, metadata, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, UNKNOWN));
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> number, ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *metadata, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *type) {
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *descForType = [self getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:metadata withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:type];
  id<JavaUtilList> possibleLengths = [((id<JavaUtilList>) nil_chk([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(descForType)) getPossibleLengthList])) isEmpty] ? [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getGeneralDesc])) getPossibleLengthList] : [descForType getPossibleLengthList];
  id<JavaUtilList> localLengths = [descForType getPossibleLengthLocalOnlyList];
  if (type == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE_OR_MOBILE)) {
    if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasPossibleNumberDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_([self getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:metadata withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE)])) {
      return ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(self, number, metadata, JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE));
    }
    else {
      ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *mobileDesc = [self getNumberDescByTypeWithComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:metadata withComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE)];
      if (ComGoogleI18nPhonenumbersPhoneNumberUtil_descHasPossibleNumberDataWithComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc_(mobileDesc)) {
        possibleLengths = create_JavaUtilArrayList_initWithJavaUtilCollection_(possibleLengths);
        [possibleLengths addAllWithJavaUtilCollection:[((id<JavaUtilList>) nil_chk([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk(mobileDesc)) getPossibleLengthList])) size] == 0 ? [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneNumberDesc *) nil_chk([((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(metadata)) getGeneralDesc])) getPossibleLengthList] : [mobileDesc getPossibleLengthList]];
        JavaUtilCollections_sortWithJavaUtilList_(possibleLengths);
        if ([((id<JavaUtilList>) nil_chk(localLengths)) isEmpty]) {
          localLengths = [mobileDesc getPossibleLengthLocalOnlyList];
        }
        else {
          localLengths = create_JavaUtilArrayList_initWithJavaUtilCollection_(localLengths);
          [localLengths addAllWithJavaUtilCollection:[mobileDesc getPossibleLengthLocalOnlyList]];
          JavaUtilCollections_sortWithJavaUtilList_(localLengths);
        }
      }
    }
  }
  if ([((JavaLangInteger *) nil_chk([possibleLengths getWithInt:0])) intValue] == -1) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, INVALID_LENGTH);
  }
  jint actualLength = [((id<JavaLangCharSequence>) nil_chk(number)) java_length];
  if ([((id<JavaUtilList>) nil_chk(localLengths)) containsWithId:JavaLangInteger_valueOfWithInt_(actualLength)]) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE_LOCAL_ONLY);
  }
  jint minimumLength = [((JavaLangInteger *) nil_chk([possibleLengths getWithInt:0])) intValue];
  if (minimumLength == actualLength) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE);
  }
  else if (minimumLength > actualLength) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, TOO_SHORT);
  }
  else if ([((JavaLangInteger *) nil_chk([possibleLengths getWithInt:[possibleLengths size] - 1])) intValue] < actualLength) {
    return JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, TOO_LONG);
  }
  return [((id<JavaUtilList>) nil_chk([possibleLengths subListWithInt:1 withInt:[possibleLengths size]])) containsWithId:JavaLangInteger_valueOfWithInt_(actualLength)] ? JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE) : JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, INVALID_LENGTH);
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_parsePrefixAsIddWithJavaUtilRegexPattern_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, JavaUtilRegexPattern *iddPattern, JavaLangStringBuilder *number) {
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(iddPattern)) matcherWithJavaLangCharSequence:number];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) lookingAt]) {
    jint matchEnd = [m end];
    JavaUtilRegexMatcher *digitMatcher = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_CAPTURING_DIGIT_PATTERN)) matcherWithJavaLangCharSequence:[((JavaLangStringBuilder *) nil_chk(number)) substringWithInt:matchEnd]];
    if ([((JavaUtilRegexMatcher *) nil_chk(digitMatcher)) find]) {
      NSString *normalizedGroup = ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeDigitsOnlyWithJavaLangCharSequence_([digitMatcher groupWithInt:1]);
      if ([((NSString *) nil_chk(normalizedGroup)) isEqual:@"0"]) {
        return false;
      }
    }
    [number delete__WithInt:0 withInt:matchEnd];
    return true;
  }
  return false;
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_checkRegionForParsingWithJavaLangCharSequence_withNSString_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> numberToParse, NSString *defaultRegion) {
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isValidRegionCodeWithNSString_(self, defaultRegion)) {
    if ((numberToParse == nil) || ([((id<JavaLangCharSequence>) nil_chk(numberToParse)) java_length] == 0) || ![((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS_PATTERN)) matcherWithJavaLangCharSequence:numberToParse])) lookingAt]) {
      return false;
    }
  }
  return true;
}

void ComGoogleI18nPhonenumbersPhoneNumberUtil_setItalianLeadingZerosForPhoneNumberWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(id<JavaLangCharSequence> nationalNumber, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumber) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  if ([((id<JavaLangCharSequence>) nil_chk(nationalNumber)) java_length] > 1 && [nationalNumber charAtWithInt:0] == '0') {
    [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setItalianLeadingZeroWithBoolean:true];
    jint numberOfLeadingZeros = 1;
    while (numberOfLeadingZeros < [nationalNumber java_length] - 1 && [nationalNumber charAtWithInt:numberOfLeadingZeros] == '0') {
      numberOfLeadingZeros++;
    }
    if (numberOfLeadingZeros != 1) {
      [phoneNumber setNumberOfLeadingZerosWithInt:numberOfLeadingZeros];
    }
  }
}

void ComGoogleI18nPhonenumbersPhoneNumberUtil_parseHelperWithJavaLangCharSequence_withNSString_withBoolean_withBoolean_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, id<JavaLangCharSequence> numberToParse, NSString *defaultRegion, jboolean keepRawInput, jboolean checkRegion, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumber) {
  if (numberToParse == nil) {
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, NOT_A_NUMBER), @"The phone number supplied was null.");
  }
  else if ([numberToParse java_length] > ComGoogleI18nPhonenumbersPhoneNumberUtil_MAX_INPUT_STRING_LENGTH) {
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_LONG), @"The string supplied was too long to parse.");
  }
  JavaLangStringBuilder *nationalNumber = create_JavaLangStringBuilder_init();
  NSString *numberBeingParsed = [numberToParse description];
  ComGoogleI18nPhonenumbersPhoneNumberUtil_buildNationalNumberForParsingWithNSString_withJavaLangStringBuilder_(self, numberBeingParsed, nationalNumber);
  if (!ComGoogleI18nPhonenumbersPhoneNumberUtil_isViablePhoneNumberWithJavaLangCharSequence_(nationalNumber)) {
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, NOT_A_NUMBER), @"The string supplied did not seem to be a phone number.");
  }
  if (checkRegion && !ComGoogleI18nPhonenumbersPhoneNumberUtil_checkRegionForParsingWithJavaLangCharSequence_withNSString_(self, nationalNumber, defaultRegion)) {
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE), @"Missing or invalid default region.");
  }
  if (keepRawInput) {
    [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setRawInputWithNSString:numberBeingParsed];
  }
  NSString *extension = [self maybeStripExtensionWithJavaLangStringBuilder:nationalNumber];
  if ([((NSString *) nil_chk(extension)) java_length] > 0) {
    [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setExtensionWithNSString:extension];
  }
  ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *regionMetadata = [self getMetadataForRegionWithNSString:defaultRegion];
  JavaLangStringBuilder *normalizedNationalNumber = create_JavaLangStringBuilder_init();
  jint countryCode = 0;
  @try {
    countryCode = [self maybeExtractCountryCodeWithJavaLangCharSequence:nationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:regionMetadata withJavaLangStringBuilder:normalizedNationalNumber withBoolean:keepRawInput withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:phoneNumber];
  }
  @catch (ComGoogleI18nPhonenumbersNumberParseException *e) {
    JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_CHARS_PATTERN)) matcherWithJavaLangCharSequence:nationalNumber];
    if ([e getErrorType] == JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE) && [((JavaUtilRegexMatcher *) nil_chk(matcher)) lookingAt]) {
      countryCode = [self maybeExtractCountryCodeWithJavaLangCharSequence:[nationalNumber substringWithInt:[((JavaUtilRegexMatcher *) nil_chk(matcher)) end]] withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:regionMetadata withJavaLangStringBuilder:normalizedNationalNumber withBoolean:keepRawInput withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:phoneNumber];
      if (countryCode == 0) {
        @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, INVALID_COUNTRY_CODE), @"Could not interpret numbers after plus-sign.");
      }
    }
    else {
      @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_([e getErrorType], [e getMessage]);
    }
  }
  if (countryCode != 0) {
    NSString *phoneNumberRegion = [self getRegionCodeForCountryCodeWithInt:countryCode];
    if (![((NSString *) nil_chk(phoneNumberRegion)) isEqual:defaultRegion]) {
      regionMetadata = ComGoogleI18nPhonenumbersPhoneNumberUtil_getMetadataForRegionOrCallingCodeWithInt_withNSString_(self, countryCode, phoneNumberRegion);
    }
  }
  else {
    [normalizedNationalNumber appendWithJavaLangCharSequence:ComGoogleI18nPhonenumbersPhoneNumberUtil_normalizeWithJavaLangStringBuilder_(nationalNumber)];
    if (defaultRegion != nil) {
      countryCode = [((ComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata *) nil_chk(regionMetadata)) getCountryCode];
      [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setCountryCodeWithInt:countryCode];
    }
    else if (keepRawInput) {
      [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) clearCountryCodeSource];
    }
  }
  if ([normalizedNationalNumber java_length] < ComGoogleI18nPhonenumbersPhoneNumberUtil_MIN_LENGTH_FOR_NSN) {
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_SHORT_NSN), @"The string supplied is too short to be a phone number.");
  }
  if (regionMetadata != nil) {
    JavaLangStringBuilder *carrierCode = create_JavaLangStringBuilder_init();
    JavaLangStringBuilder *potentialNationalNumber = create_JavaLangStringBuilder_initWithJavaLangCharSequence_(normalizedNationalNumber);
    [self maybeStripNationalPrefixAndCarrierCodeWithJavaLangStringBuilder:potentialNationalNumber withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata:regionMetadata withJavaLangStringBuilder:carrierCode];
    ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *validationResult = ComGoogleI18nPhonenumbersPhoneNumberUtil_testNumberLengthWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonemetadata_PhoneMetadata_(self, potentialNationalNumber, regionMetadata);
    if (validationResult != JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, TOO_SHORT) && validationResult != JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, IS_POSSIBLE_LOCAL_ONLY) && validationResult != JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult, INVALID_LENGTH)) {
      normalizedNationalNumber = potentialNationalNumber;
      if (keepRawInput && [carrierCode java_length] > 0) {
        [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setPreferredDomesticCarrierCodeWithNSString:[carrierCode description]];
      }
    }
  }
  jint lengthOfNationalNumber = [normalizedNationalNumber java_length];
  if (lengthOfNationalNumber < ComGoogleI18nPhonenumbersPhoneNumberUtil_MIN_LENGTH_FOR_NSN) {
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_SHORT_NSN), @"The string supplied is too short to be a phone number.");
  }
  if (lengthOfNationalNumber > ComGoogleI18nPhonenumbersPhoneNumberUtil_MAX_LENGTH_FOR_NSN) {
    @throw create_ComGoogleI18nPhonenumbersNumberParseException_initWithComGoogleI18nPhonenumbersNumberParseException_ErrorType_withNSString_(JreLoadEnum(ComGoogleI18nPhonenumbersNumberParseException_ErrorType, TOO_LONG), @"The string supplied is too long to be a phone number.");
  }
  ComGoogleI18nPhonenumbersPhoneNumberUtil_setItalianLeadingZerosForPhoneNumberWithJavaLangCharSequence_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(normalizedNationalNumber, phoneNumber);
  [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumber)) setNationalNumberWithLong:JavaLangLong_parseLongWithNSString_([normalizedNationalNumber description])];
}

void ComGoogleI18nPhonenumbersPhoneNumberUtil_buildNationalNumberForParsingWithNSString_withJavaLangStringBuilder_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, NSString *numberToParse, JavaLangStringBuilder *nationalNumber) {
  jint indexOfPhoneContext = [((NSString *) nil_chk(numberToParse)) java_indexOfString:ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_PHONE_CONTEXT];
  if (indexOfPhoneContext >= 0) {
    jint phoneContextStart = indexOfPhoneContext + [((NSString *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_PHONE_CONTEXT)) java_length];
    if (phoneContextStart < ([numberToParse java_length] - 1) && [numberToParse charAtWithInt:phoneContextStart] == ComGoogleI18nPhonenumbersPhoneNumberUtil_PLUS_SIGN) {
      jint phoneContextEnd = [numberToParse java_indexOf:';' fromIndex:phoneContextStart];
      if (phoneContextEnd > 0) {
        [((JavaLangStringBuilder *) nil_chk(nationalNumber)) appendWithNSString:[numberToParse java_substring:phoneContextStart endIndex:phoneContextEnd]];
      }
      else {
        [((JavaLangStringBuilder *) nil_chk(nationalNumber)) appendWithNSString:[numberToParse java_substring:phoneContextStart]];
      }
    }
    jint indexOfRfc3966Prefix = [numberToParse java_indexOfString:ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_PREFIX];
    jint indexOfNationalNumber = (indexOfRfc3966Prefix >= 0) ? indexOfRfc3966Prefix + [((NSString *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_PREFIX)) java_length] : 0;
    [((JavaLangStringBuilder *) nil_chk(nationalNumber)) appendWithNSString:[numberToParse java_substring:indexOfNationalNumber endIndex:indexOfPhoneContext]];
  }
  else {
    [((JavaLangStringBuilder *) nil_chk(nationalNumber)) appendWithJavaLangCharSequence:ComGoogleI18nPhonenumbersPhoneNumberUtil_extractPossibleNumberWithJavaLangCharSequence_(numberToParse)];
  }
  jint indexOfIsdn = [nationalNumber indexOfWithNSString:ComGoogleI18nPhonenumbersPhoneNumberUtil_RFC3966_ISDN_SUBADDRESS];
  if (indexOfIsdn > 0) {
    [nationalNumber delete__WithInt:indexOfIsdn withInt:[nationalNumber java_length]];
  }
}

ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *ComGoogleI18nPhonenumbersPhoneNumberUtil_copyCoreFieldsOnlyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumberIn) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_initialize();
  ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *phoneNumber = create_ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_init();
  [phoneNumber setCountryCodeWithInt:[((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(phoneNumberIn)) getCountryCode]];
  [phoneNumber setNationalNumberWithLong:[phoneNumberIn getNationalNumber]];
  if ([((NSString *) nil_chk([phoneNumberIn getExtension])) java_length] > 0) {
    [phoneNumber setExtensionWithNSString:[phoneNumberIn getExtension]];
  }
  if ([phoneNumberIn isItalianLeadingZero]) {
    [phoneNumber setItalianLeadingZeroWithBoolean:true];
    [phoneNumber setNumberOfLeadingZerosWithInt:[phoneNumberIn getNumberOfLeadingZeros]];
  }
  return phoneNumber;
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberUtil_isNationalNumberSuffixOfTheOtherWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_(ComGoogleI18nPhonenumbersPhoneNumberUtil *self, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *firstNumber, ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *secondNumber) {
  NSString *firstNumberNationalNumber = NSString_java_valueOfLong_([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(firstNumber)) getNationalNumber]);
  NSString *secondNumberNationalNumber = NSString_java_valueOfLong_([((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(secondNumber)) getNationalNumber]);
  return [((NSString *) nil_chk(firstNumberNationalNumber)) java_hasSuffix:secondNumberNationalNumber] || [((NSString *) nil_chk(secondNumberNationalNumber)) java_hasSuffix:firstNumberNationalNumber];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPhoneNumberUtil)

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat)

ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_values_[4];

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat

+ (IOSObjectArray *)values {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_values();
}

+ (ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *)valueOfWithNSString:(NSString *)name {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_valueOfWithNSString_(name);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_Enum)toNSEnum {
  return (ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_Enum)[self ordinal];
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"E164", @"INTERNATIONAL", @"NATIONAL", @"RFC3966",
    };
    for (jint i = 0; i < 4; i++) {
      ((void)(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat)
  }
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_values() {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_values_ count:4 type:ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_class_()];
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_valueOfWithNSString_(NSString *name) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_initialize();
  for (int i = 0; i < 4; i++) {
    ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *e = ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_fromOrdinal(NSUInteger ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberFormat)

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType)

ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values_[12];

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType

+ (IOSObjectArray *)values {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values();
}

+ (ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)valueOfWithNSString:(NSString *)name {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_valueOfWithNSString_(name);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum)toNSEnum {
  return (ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_Enum)[self ordinal];
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 12 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"FIXED_LINE", @"MOBILE", @"FIXED_LINE_OR_MOBILE", @"TOLL_FREE", @"PREMIUM_RATE", @"SHARED_COST", @"VOIP", @"PERSONAL_NUMBER", @"PAGER", @"UAN", @"VOICEMAIL", @"UNKNOWN",
    };
    for (jint i = 0; i < 12; i++) {
      ((void)(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType)
  }
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values() {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values_ count:12 type:ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_class_()];
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_valueOfWithNSString_(NSString *name) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_initialize();
  for (int i = 0; i < 12; i++) {
    ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *e = ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_fromOrdinal(NSUInteger ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_initialize();
  if (ordinal >= 12) {
    return nil;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType)

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType)

ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_values_[5];

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType

+ (IOSObjectArray *)values {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_values();
}

+ (ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *)valueOfWithNSString:(NSString *)name {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_valueOfWithNSString_(name);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_Enum)toNSEnum {
  return (ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_Enum)[self ordinal];
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"NOT_A_NUMBER", @"NO_MATCH", @"SHORT_NSN_MATCH", @"NSN_MATCH", @"EXACT_MATCH",
    };
    for (jint i = 0; i < 5; i++) {
      ((void)(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType)
  }
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_values() {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_values_ count:5 type:ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_class_()];
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_valueOfWithNSString_(NSString *name) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_initialize();
  for (int i = 0; i < 5; i++) {
    ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *e = ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType *ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_fromOrdinal(NSUInteger ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPhoneNumberUtil_MatchType)

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult)

ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_values_[6];

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult

+ (IOSObjectArray *)values {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_values();
}

+ (ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *)valueOfWithNSString:(NSString *)name {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_valueOfWithNSString_(name);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_Enum)toNSEnum {
  return (ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_Enum)[self ordinal];
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 6 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    id names[] = {
      @"IS_POSSIBLE", @"IS_POSSIBLE_LOCAL_ONLY", @"INVALID_COUNTRY_CODE", @"TOO_SHORT", @"INVALID_LENGTH", @"TOO_LONG",
    };
    for (jint i = 0; i < 6; i++) {
      ((void)(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_initWithNSString_withInt_(e, names[i], i);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult)
  }
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_values() {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_values_ count:6 type:ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_class_()];
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_valueOfWithNSString_(NSString *name) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_initialize();
  for (int i = 0; i < 6; i++) {
    ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *e = ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult *ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_fromOrdinal(NSUInteger ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPhoneNumberUtil_ValidationResult)

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency)

ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_values_[4];

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency

+ (IOSObjectArray *)values {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_values();
}

+ (ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *)valueOfWithNSString:(NSString *)name {
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_valueOfWithNSString_(name);
}

- (ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_Enum)toNSEnum {
  return (ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_Enum)[self ordinal];
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency class]) {
    size_t allocSize = 0;
    size_t objSize_POSSIBLE = class_getInstanceSize([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1 class]);
    allocSize += objSize_POSSIBLE;
    size_t objSize_VALID = class_getInstanceSize([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2 class]);
    allocSize += objSize_VALID;
    size_t objSize_STRICT_GROUPING = class_getInstanceSize([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3 class]);
    allocSize += objSize_STRICT_GROUPING;
    size_t objSize_EXACT_GROUPING = class_getInstanceSize([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4 class]);
    allocSize += objSize_EXACT_GROUPING;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency, POSSIBLE) = e = objc_constructInstance([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1 class], (void *)ptr)), ptr += objSize_POSSIBLE);
    ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1_initWithNSString_withInt_(e, @"POSSIBLE", 0);
    ((void) (JreEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency, VALID) = e = objc_constructInstance([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2 class], (void *)ptr)), ptr += objSize_VALID);
    ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2_initWithNSString_withInt_(e, @"VALID", 1);
    ((void) (JreEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency, STRICT_GROUPING) = e = objc_constructInstance([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3 class], (void *)ptr)), ptr += objSize_STRICT_GROUPING);
    ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_initWithNSString_withInt_(e, @"STRICT_GROUPING", 2);
    ((void) (JreEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency, EXACT_GROUPING) = e = objc_constructInstance([ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4 class], (void *)ptr)), ptr += objSize_EXACT_GROUPING);
    ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_initWithNSString_withInt_(e, @"EXACT_GROUPING", 3);
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency)
  }
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_values() {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_values_ count:4 type:ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_class_()];
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_valueOfWithNSString_(NSString *name) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initialize();
  for (int i = 0; i < 4; i++) {
    ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *e = ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_fromOrdinal(NSUInteger ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency)

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util {
  return [((ComGoogleI18nPhonenumbersPhoneNumberUtil *) nil_chk(util)) isPossibleNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1 class]);
  [super dealloc];
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_1 *self, NSString *__name, jint __ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util {
  if (![((ComGoogleI18nPhonenumbersPhoneNumberUtil *) nil_chk(util)) isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number] || !ComGoogleI18nPhonenumbersPhoneNumberMatcher_containsOnlyValidXCharsWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_(number, [((id<JavaLangCharSequence>) nil_chk(candidate)) description], util)) {
    return false;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberMatcher_isNationalPrefixPresentIfRequiredWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhoneNumberUtil_(number, util);
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2 class]);
  [super dealloc];
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_2 *self, NSString *__name, jint __ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util {
  NSString *candidateString = [((id<JavaLangCharSequence>) nil_chk(candidate)) description];
  if (![((ComGoogleI18nPhonenumbersPhoneNumberUtil *) nil_chk(util)) isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number] || !ComGoogleI18nPhonenumbersPhoneNumberMatcher_containsOnlyValidXCharsWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_(number, candidateString, util) || ComGoogleI18nPhonenumbersPhoneNumberMatcher_containsMoreThanOneSlashInNationalNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(number, candidateString) || !ComGoogleI18nPhonenumbersPhoneNumberMatcher_isNationalPrefixPresentIfRequiredWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhoneNumberUtil_(number, util)) {
    return false;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberMatcher_checkNumberGroupingIsValidWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaLangCharSequence_withComGoogleI18nPhonenumbersPhoneNumberUtil_withComGoogleI18nPhonenumbersPhoneNumberMatcher_NumberGroupingChecker_(number, candidate, util, create_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1_init());
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3 class]);
  [super dealloc];
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3 *self, NSString *__name, jint __ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1

- (jboolean)checkGroupsWithComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util
               withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                          withJavaLangStringBuilder:(JavaLangStringBuilder *)normalizedCandidate
                                                  withNSStringArray:(IOSObjectArray *)expectedNumberGroups {
  return ComGoogleI18nPhonenumbersPhoneNumberMatcher_allNumberGroupsRemainGroupedWithComGoogleI18nPhonenumbersPhoneNumberUtil_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaLangStringBuilder_withNSStringArray_(util, number, normalizedCandidate, expectedNumberGroups);
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1_init(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1 *self) {
  NSObject_init(self);
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1 *new_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1, init)
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1 *create_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_3_1, init)
}

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4

- (jboolean)verifyWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                              withJavaLangCharSequence:(id<JavaLangCharSequence>)candidate
                          withComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util {
  NSString *candidateString = [((id<JavaLangCharSequence>) nil_chk(candidate)) description];
  if (![((ComGoogleI18nPhonenumbersPhoneNumberUtil *) nil_chk(util)) isValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number] || !ComGoogleI18nPhonenumbersPhoneNumberMatcher_containsOnlyValidXCharsWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_(number, candidateString, util) || ComGoogleI18nPhonenumbersPhoneNumberMatcher_containsMoreThanOneSlashInNationalNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withNSString_(number, candidateString) || !ComGoogleI18nPhonenumbersPhoneNumberMatcher_isNationalPrefixPresentIfRequiredWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withComGoogleI18nPhonenumbersPhoneNumberUtil_(number, util)) {
    return false;
  }
  return ComGoogleI18nPhonenumbersPhoneNumberMatcher_checkNumberGroupingIsValidWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaLangCharSequence_withComGoogleI18nPhonenumbersPhoneNumberUtil_withComGoogleI18nPhonenumbersPhoneNumberMatcher_NumberGroupingChecker_(number, candidate, util, create_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1_init());
}

- (void)dealloc {
  JreCheckFinalize(self, [ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4 class]);
  [super dealloc];
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_initWithNSString_withInt_(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4 *self, NSString *__name, jint __ordinal) {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1

- (jboolean)checkGroupsWithComGoogleI18nPhonenumbersPhoneNumberUtil:(ComGoogleI18nPhonenumbersPhoneNumberUtil *)util
               withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                          withJavaLangStringBuilder:(JavaLangStringBuilder *)normalizedCandidate
                                                  withNSStringArray:(IOSObjectArray *)expectedNumberGroups {
  return ComGoogleI18nPhonenumbersPhoneNumberMatcher_allNumberGroupsAreExactlyPresentWithComGoogleI18nPhonenumbersPhoneNumberUtil_withComGoogleI18nPhonenumbersPhonenumber_PhoneNumber_withJavaLangStringBuilder_withNSStringArray_(util, number, normalizedCandidate, expectedNumberGroups);
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1_init(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1 *self) {
  NSObject_init(self);
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1 *new_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1, init)
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1 *create_ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_4_1, init)
}

@implementation ComGoogleI18nPhonenumbersPhoneNumberUtil_1

- (id<JavaUtilIterator>)iterator {
  return create_ComGoogleI18nPhonenumbersPhoneNumberMatcher_initPackagePrivateWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(this$0_, val$text_, val$defaultRegion_, val$leniency_, val$maxTries_);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$text_);
  RELEASE_(val$defaultRegion_);
  RELEASE_(val$leniency_);
  [super dealloc];
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberUtil_1_initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(ComGoogleI18nPhonenumbersPhoneNumberUtil_1 *self, ComGoogleI18nPhonenumbersPhoneNumberUtil *outer$, id<JavaLangCharSequence> capture$0, NSString *capture$1, ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *capture$2, jlong capture$3) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$text_, capture$0);
  JreStrongAssign(&self->val$defaultRegion_, capture$1);
  JreStrongAssign(&self->val$leniency_, capture$2);
  self->val$maxTries_ = capture$3;
  NSObject_init(self);
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_1 *new_ComGoogleI18nPhonenumbersPhoneNumberUtil_1_initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(ComGoogleI18nPhonenumbersPhoneNumberUtil *outer$, id<JavaLangCharSequence> capture$0, NSString *capture$1, ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *capture$2, jlong capture$3) {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil_1, initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_, outer$, capture$0, capture$1, capture$2, capture$3)
}

ComGoogleI18nPhonenumbersPhoneNumberUtil_1 *create_ComGoogleI18nPhonenumbersPhoneNumberUtil_1_initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_(ComGoogleI18nPhonenumbersPhoneNumberUtil *outer$, id<JavaLangCharSequence> capture$0, NSString *capture$1, ComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency *capture$2, jlong capture$3) {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersPhoneNumberUtil_1, initWithComGoogleI18nPhonenumbersPhoneNumberUtil_withJavaLangCharSequence_withNSString_withComGoogleI18nPhonenumbersPhoneNumberUtil_Leniency_withLong_, outer$, capture$0, capture$1, capture$2, capture$3)
}
