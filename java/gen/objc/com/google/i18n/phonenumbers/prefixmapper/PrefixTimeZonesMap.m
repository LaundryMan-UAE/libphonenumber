//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/libphonenumber/java/internal/prefixmapper/src/main/java/com/google/i18n/phonenumbers/prefixmapper/PrefixTimeZonesMap.java
//

#include "J2ObjC_source.h"
#include "com/google/i18n/phonenumbers/PhoneNumberUtil.h"
#include "com/google/i18n/phonenumbers/Phonenumber.h"
#include "com/google/i18n/phonenumbers/prefixmapper/PhonePrefixMap.h"
#include "com/google/i18n/phonenumbers/prefixmapper/PrefixTimeZonesMap.h"
#include "java/io/ObjectInput.h"
#include "java/io/ObjectOutput.h"
#include "java/lang/Long.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/SortedMap.h"
#include "java/util/StringTokenizer.h"

@interface ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap () {
 @public
  ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap *phonePrefixMap_;
}

/*!
 @brief Returns the list of time zones <code>key</code> corresponds to.
 <p><code>key</code> could be the calling country code and the full significant number of a
 certain number, or it could be just a phone-number prefix.
 For example, the full number 16502530000 (from the phone-number +1 650 253 0000) is a valid
 input. Also, any of its prefixes, such as 16502, is also valid.
 @param key  the key to look up
 @return the list of corresponding time zones
 */
- (id<JavaUtilList>)lookupTimeZonesForNumberWithLong:(jlong)key;

/*!
 @brief Split <code>timezonesString</code> into all the time zones that are part of it.
 */
- (id<JavaUtilList>)tokenizeRawOutputStringWithNSString:(NSString *)timezonesString;

@end

J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap, phonePrefixMap_, ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap *)

inline NSString *ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_get_RAW_STRING_TIMEZONES_SEPARATOR();
static NSString *ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_RAW_STRING_TIMEZONES_SEPARATOR = @"&";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap, RAW_STRING_TIMEZONES_SEPARATOR, NSString *)

__attribute__((unused)) static id<JavaUtilList> ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_lookupTimeZonesForNumberWithLong_(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap *self, jlong key);

__attribute__((unused)) static id<JavaUtilList> ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_tokenizeRawOutputStringWithNSString_(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap *self, NSString *timezonesString);

@implementation ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap

- (void)readPrefixTimeZonesMapWithJavaUtilSortedMap:(id<JavaUtilSortedMap>)sortedPrefixTimeZoneMap {
  [((ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap *) nil_chk(phonePrefixMap_)) readPhonePrefixMapWithJavaUtilSortedMap:sortedPrefixTimeZoneMap];
}

- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)objectOutput {
  [((ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap *) nil_chk(phonePrefixMap_)) writeExternalWithJavaIoObjectOutput:objectOutput];
}

- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)objectInput {
  [((ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap *) nil_chk(phonePrefixMap_)) readExternalWithJavaIoObjectInput:objectInput];
}

- (id<JavaUtilList>)lookupTimeZonesForNumberWithLong:(jlong)key {
  return ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_lookupTimeZonesForNumberWithLong_(self, key);
}

- (id<JavaUtilList>)lookupTimeZonesForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  jlong phonePrefix = JavaLangLong_parseLongWithNSString_(JreStrcat("I$", [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode], [((ComGoogleI18nPhonenumbersPhoneNumberUtil *) nil_chk(ComGoogleI18nPhonenumbersPhoneNumberUtil_getInstance())) getNationalSignificantNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number]));
  return ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_lookupTimeZonesForNumberWithLong_(self, phonePrefix);
}

- (id<JavaUtilList>)lookupCountryLevelTimeZonesForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number {
  return ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_lookupTimeZonesForNumberWithLong_(self, [((ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *) nil_chk(number)) getCountryCode]);
}

- (id<JavaUtilList>)tokenizeRawOutputStringWithNSString:(NSString *)timezonesString {
  return ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_tokenizeRawOutputStringWithNSString_(self, timezonesString);
}

- (NSString *)description {
  return [((ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap *) nil_chk(phonePrefixMap_)) description];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(phonePrefixMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 5, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 8, 11, -1, 12, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 13, 11, -1, 12, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 14, 15, -1, 16, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(readPrefixTimeZonesMapWithJavaUtilSortedMap:);
  methods[1].selector = @selector(writeExternalWithJavaIoObjectOutput:);
  methods[2].selector = @selector(readExternalWithJavaIoObjectInput:);
  methods[3].selector = @selector(lookupTimeZonesForNumberWithLong:);
  methods[4].selector = @selector(lookupTimeZonesForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:);
  methods[5].selector = @selector(lookupCountryLevelTimeZonesForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:);
  methods[6].selector = @selector(tokenizeRawOutputStringWithNSString:);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "phonePrefixMap_", "LComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "RAW_STRING_TIMEZONES_SEPARATOR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
  };
  static const void *ptrTable[] = { "readPrefixTimeZonesMap", "LJavaUtilSortedMap;", "(Ljava/util/SortedMap<Ljava/lang/Integer;Ljava/lang/String;>;)V", "writeExternal", "LJavaIoObjectOutput;", "LJavaIoIOException;", "readExternal", "LJavaIoObjectInput;", "lookupTimeZonesForNumber", "J", "(J)Ljava/util/List<Ljava/lang/String;>;", "LComGoogleI18nPhonenumbersPhonenumber_PhoneNumber;", "(Lcom/google/i18n/phonenumbers/Phonenumber$PhoneNumber;)Ljava/util/List<Ljava/lang/String;>;", "lookupCountryLevelTimeZonesForNumber", "tokenizeRawOutputString", "LNSString;", "(Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;", "toString", &ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_RAW_STRING_TIMEZONES_SEPARATOR };
  static const J2ObjcClassInfo _ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap = { "PrefixTimeZonesMap", "com.google.i18n.phonenumbers.prefixmapper", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, -1, -1, -1, -1 };
  return &_ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap;
}

@end

id<JavaUtilList> ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_lookupTimeZonesForNumberWithLong_(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap *self, jlong key) {
  NSString *timezonesString = [((ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap *) nil_chk(self->phonePrefixMap_)) lookupWithLong:key];
  if (timezonesString == nil) {
    return create_JavaUtilLinkedList_init();
  }
  return ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_tokenizeRawOutputStringWithNSString_(self, timezonesString);
}

id<JavaUtilList> ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_tokenizeRawOutputStringWithNSString_(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap *self, NSString *timezonesString) {
  JavaUtilStringTokenizer *tokenizer = create_JavaUtilStringTokenizer_initWithNSString_withNSString_(timezonesString, ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_RAW_STRING_TIMEZONES_SEPARATOR);
  JavaUtilLinkedList *timezonesList = create_JavaUtilLinkedList_init();
  while ([tokenizer hasMoreTokens]) {
    [timezonesList addWithId:[tokenizer nextToken]];
  }
  return timezonesList;
}

void ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_init(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->phonePrefixMap_, new_ComGoogleI18nPhonenumbersPrefixmapperPhonePrefixMap_init());
}

ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap *new_ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_init() {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap, init)
}

ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap *create_ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap_init() {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPrefixmapperPrefixTimeZonesMap)
