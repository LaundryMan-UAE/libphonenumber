//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/andrefonseca/Documents/PodsFolders/libphonenumber/java/carrier/src/main/java/com/google/i18n/phonenumbers/PhoneNumberToCarrierMapper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/i18n/phonenumbers/PhoneNumberToCarrierMapper.h"
#include "com/google/i18n/phonenumbers/PhoneNumberUtil.h"
#include "com/google/i18n/phonenumbers/Phonenumber.h"
#include "com/google/i18n/phonenumbers/prefixmapper/PrefixFileReader.h"
#include "java/util/Locale.h"

@interface ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper () {
 @public
  ComGoogleI18nPhonenumbersPrefixmapperPrefixFileReader *prefixFileReader_;
  ComGoogleI18nPhonenumbersPhoneNumberUtil *phoneUtil_;
}

/*!
 @brief Checks if the supplied number type supports carrier lookup.
 */
- (jboolean)isMobileWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)numberType;

@end

J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper, prefixFileReader_, ComGoogleI18nPhonenumbersPrefixmapperPrefixFileReader *)
J2OBJC_FIELD_SETTER(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper, phoneUtil_, ComGoogleI18nPhonenumbersPhoneNumberUtil *)

inline ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_get_instance();
inline ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_set_instance(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *value);
static ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_instance;
J2OBJC_STATIC_FIELD_OBJ(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper, instance, ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *)

inline NSString *ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_get_MAPPING_DATA_DIRECTORY();
static NSString *ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_MAPPING_DATA_DIRECTORY = @"/com/google/i18n/phonenumbers/carrier/data/";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper, MAPPING_DATA_DIRECTORY, NSString *)

__attribute__((unused)) static jboolean ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_isMobileWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *self, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *numberType);

J2OBJC_INITIALIZED_DEFN(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper)

@implementation ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper

- (instancetype)initWithNSString:(NSString *)phonePrefixDataDirectory {
  ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_initWithNSString_(self, phonePrefixDataDirectory);
  return self;
}

+ (ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *)getInstance {
  return ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_getInstance();
}

- (NSString *)getNameForValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                     withJavaUtilLocale:(JavaUtilLocale *)languageCode {
  NSString *langStr = [((JavaUtilLocale *) nil_chk(languageCode)) getLanguage];
  NSString *scriptStr = @"";
  NSString *regionStr = [languageCode getCountry];
  return [((ComGoogleI18nPhonenumbersPrefixmapperPrefixFileReader *) nil_chk(prefixFileReader_)) getDescriptionForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withNSString:langStr withNSString:scriptStr withNSString:regionStr];
}

- (NSString *)getNameForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                withJavaUtilLocale:(JavaUtilLocale *)languageCode {
  ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *numberType = [((ComGoogleI18nPhonenumbersPhoneNumberUtil *) nil_chk(phoneUtil_)) getNumberTypeWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number];
  if (ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_isMobileWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(self, numberType)) {
    return [self getNameForValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withJavaUtilLocale:languageCode];
  }
  return @"";
}

- (NSString *)getSafeDisplayNameWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:(ComGoogleI18nPhonenumbersPhonenumber_PhoneNumber *)number
                                                                  withJavaUtilLocale:(JavaUtilLocale *)languageCode {
  if ([((ComGoogleI18nPhonenumbersPhoneNumberUtil *) nil_chk(phoneUtil_)) isMobileNumberPortableRegionWithNSString:[phoneUtil_ getRegionCodeForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number]]) {
    return @"";
  }
  return [self getNameForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:number withJavaUtilLocale:languageCode];
}

- (jboolean)isMobileWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *)numberType {
  return ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_isMobileWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(self, numberType);
}

- (void)dealloc {
  RELEASE_(prefixFileReader_);
  RELEASE_(phoneUtil_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper;", 0x29, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(getNameForValidNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withJavaUtilLocale:);
  methods[3].selector = @selector(getNameForNumberWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withJavaUtilLocale:);
  methods[4].selector = @selector(getSafeDisplayNameWithComGoogleI18nPhonenumbersPhonenumber_PhoneNumber:withJavaUtilLocale:);
  methods[5].selector = @selector(isMobileWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper;", .constantValue.asLong = 0, 0xa, -1, 7, -1, -1 },
    { "MAPPING_DATA_DIRECTORY", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "prefixFileReader_", "LComGoogleI18nPhonenumbersPrefixmapperPrefixFileReader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "phoneUtil_", "LComGoogleI18nPhonenumbersPhoneNumberUtil;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "getNameForValidNumber", "LComGoogleI18nPhonenumbersPhonenumber_PhoneNumber;LJavaUtilLocale;", "getNameForNumber", "getSafeDisplayName", "isMobile", "LComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType;", &ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_instance, &ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_MAPPING_DATA_DIRECTORY };
  static const J2ObjcClassInfo _ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper = { "PhoneNumberToCarrierMapper", "com.google.i18n.phonenumbers", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper;
}

+ (void)initialize {
  if (self == [ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper class]) {
    JreStrongAssign(&ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_instance, nil);
    J2OBJC_SET_INITIALIZED(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper)
  }
}

@end

void ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_initWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *self, NSString *phonePrefixDataDirectory) {
  NSObject_init(self);
  JreStrongAssign(&self->prefixFileReader_, nil);
  JreStrongAssign(&self->phoneUtil_, ComGoogleI18nPhonenumbersPhoneNumberUtil_getInstance());
  JreStrongAssignAndConsume(&self->prefixFileReader_, new_ComGoogleI18nPhonenumbersPrefixmapperPrefixFileReader_initWithNSString_(phonePrefixDataDirectory));
}

ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *new_ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_initWithNSString_(NSString *phonePrefixDataDirectory) {
  J2OBJC_NEW_IMPL(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper, initWithNSString_, phonePrefixDataDirectory)
}

ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *create_ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_initWithNSString_(NSString *phonePrefixDataDirectory) {
  J2OBJC_CREATE_IMPL(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper, initWithNSString_, phonePrefixDataDirectory)
}

ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_getInstance() {
  ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_initialize();
  @synchronized(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_class_()) {
    if (ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_instance == nil) {
      JreStrongAssignAndConsume(&ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_instance, new_ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_initWithNSString_(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_MAPPING_DATA_DIRECTORY));
    }
    return ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_instance;
  }
}

jboolean ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper_isMobileWithComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType_(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper *self, ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType *numberType) {
  return (numberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, MOBILE) || numberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, FIXED_LINE_OR_MOBILE) || numberType == JreLoadEnum(ComGoogleI18nPhonenumbersPhoneNumberUtil_PhoneNumberType, PAGER));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleI18nPhonenumbersPhoneNumberToCarrierMapper)
